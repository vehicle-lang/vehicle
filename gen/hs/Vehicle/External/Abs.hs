-- File generated by the BNF Converter (bnfc 2.9.3).

{-# LANGUAGE DeriveDataTypeable #-}
{-# LANGUAGE DeriveGeneric #-}
{-# LANGUAGE PatternSynonyms #-}

-- | The abstract syntax of language External.

module Vehicle.External.Abs where

import qualified Prelude as C
  ( Eq, Ord, Show, Read
  , Int, Maybe(..)
  )

import qualified Data.Text
import qualified Data.Data    as C (Data, Typeable)
import qualified GHC.Generics as C (Generic)

data Binder
    = ExplicitBinder Name
    | ExplicitBinderAnn Name TokElemOf Expr
    | ImplicitBinder Name
    | ImplicitBinderAnn Name TokElemOf Expr
    | InstanceBinder Name
    | InstanceBinderAnn Name TokElemOf Expr
  deriving (C.Eq, C.Ord, C.Show, C.Read, C.Data, C.Typeable, C.Generic)

data Arg = ExplicitArg Expr | ImplicitArg Expr | InstanceArg Expr
  deriving (C.Eq, C.Ord, C.Show, C.Read, C.Data, C.Typeable, C.Generic)

data LetDecl = LDecl Binder Expr
  deriving (C.Eq, C.Ord, C.Show, C.Read, C.Data, C.Typeable, C.Generic)

data Lit
    = UnitLiteral
    | NatLiteral Natural
    | RatLiteral Rational
    | BoolLiteral Boolean
  deriving (C.Eq, C.Ord, C.Show, C.Read, C.Data, C.Typeable, C.Generic)

data Expr
    = Type TypeToken
    | Ann Expr TokElemOf Expr
    | ForallT TokForallT [Binder] TokDot Expr
    | Let TokLet [LetDecl] Expr
    | Lam TokLambda [Binder] TokArrow Expr
    | Fun Expr TokArrow Expr
    | App Expr Arg
    | Var Name
    | Literal Lit
    | Hole HoleToken
    | Forall TokForall [Binder] TokDot Expr
    | Exists TokExists [Binder] TokDot Expr
    | ForallIn TokForall [Binder] Expr TokDot Expr
    | ExistsIn TokExists [Binder] Expr TokDot Expr
    | Foreach TokForeach [Binder] TokDot Expr
    | If TokIf Expr TokThen Expr TokElse Expr
    | Impl Expr TokImpl Expr
    | And Expr TokAnd Expr
    | Or Expr TokOr Expr
    | Eq Expr TokEq Expr
    | Neq Expr TokNeq Expr
    | Not TokNot Expr
    | Le Expr TokLe Expr
    | Lt Expr TokLt Expr
    | Ge Expr TokGe Expr
    | Gt Expr TokGt Expr
    | Add Expr TokAdd Expr
    | Sub Expr TokSub Expr
    | Mul Expr TokMul Expr
    | Div Expr TokDiv Expr
    | Neg TokSub Expr
    | VecLiteral TokSeqOpen [Expr] TokSeqClose
    | Nil TokNil
    | Cons Expr TokCons Expr
    | At Expr TokAt Expr
    | Map TokMap Expr Expr
    | Fold TokFold Expr Expr Expr
    | Unit TokUnit
    | Bool TokBool
    | Rat TokRat
    | Int TokInt
    | Nat TokNat
    | List TokList Expr
    | Vector TokVector Expr Expr
    | Tensor TokTensor Expr Expr
    | Index TokIndex Expr
  deriving (C.Eq, C.Ord, C.Show, C.Read, C.Data, C.Typeable, C.Generic)

data DeclAnnName
    = Network TokNetwork
    | Dataset TokDataset
    | Parameter TokParameter
    | Property TokProperty
  deriving (C.Eq, C.Ord, C.Show, C.Read, C.Data, C.Typeable, C.Generic)

data DeclAnnOption = BooleanOption Name Boolean
  deriving (C.Eq, C.Ord, C.Show, C.Read, C.Data, C.Typeable, C.Generic)

data DeclAnnOpts
    = DeclAnnWithOpts [DeclAnnOption] | DeclAnnWithoutOpts
  deriving (C.Eq, C.Ord, C.Show, C.Read, C.Data, C.Typeable, C.Generic)

data Decl
    = DefAnn DeclAnnName DeclAnnOpts
    | DefType Name [Binder] Expr
    | DefFunType Name TokElemOf Expr
    | DefFunExpr Name [Binder] Expr
  deriving (C.Eq, C.Ord, C.Show, C.Read, C.Data, C.Typeable, C.Generic)

data Prog = Main [Decl]
  deriving (C.Eq, C.Ord, C.Show, C.Read, C.Data, C.Typeable, C.Generic)

newtype Boolean = Boolean ((C.Int, C.Int), Data.Text.Text)
  deriving (C.Eq, C.Ord, C.Show, C.Read, C.Data, C.Typeable, C.Generic)

newtype Natural = Natural ((C.Int, C.Int), Data.Text.Text)
  deriving (C.Eq, C.Ord, C.Show, C.Read, C.Data, C.Typeable, C.Generic)

newtype Rational = Rational ((C.Int, C.Int), Data.Text.Text)
  deriving (C.Eq, C.Ord, C.Show, C.Read, C.Data, C.Typeable, C.Generic)

newtype TokNetwork = TokNetwork ((C.Int, C.Int), Data.Text.Text)
  deriving (C.Eq, C.Ord, C.Show, C.Read, C.Data, C.Typeable, C.Generic)

newtype TokDataset = TokDataset ((C.Int, C.Int), Data.Text.Text)
  deriving (C.Eq, C.Ord, C.Show, C.Read, C.Data, C.Typeable, C.Generic)

newtype TokParameter = TokParameter ((C.Int, C.Int), Data.Text.Text)
  deriving (C.Eq, C.Ord, C.Show, C.Read, C.Data, C.Typeable, C.Generic)

newtype TokProperty = TokProperty ((C.Int, C.Int), Data.Text.Text)
  deriving (C.Eq, C.Ord, C.Show, C.Read, C.Data, C.Typeable, C.Generic)

newtype TokArrow = TokArrow ((C.Int, C.Int), Data.Text.Text)
  deriving (C.Eq, C.Ord, C.Show, C.Read, C.Data, C.Typeable, C.Generic)

newtype TokForallT = TokForallT ((C.Int, C.Int), Data.Text.Text)
  deriving (C.Eq, C.Ord, C.Show, C.Read, C.Data, C.Typeable, C.Generic)

newtype TokIf = TokIf ((C.Int, C.Int), Data.Text.Text)
  deriving (C.Eq, C.Ord, C.Show, C.Read, C.Data, C.Typeable, C.Generic)

newtype TokThen = TokThen ((C.Int, C.Int), Data.Text.Text)
  deriving (C.Eq, C.Ord, C.Show, C.Read, C.Data, C.Typeable, C.Generic)

newtype TokElse = TokElse ((C.Int, C.Int), Data.Text.Text)
  deriving (C.Eq, C.Ord, C.Show, C.Read, C.Data, C.Typeable, C.Generic)

newtype TokDot = TokDot ((C.Int, C.Int), Data.Text.Text)
  deriving (C.Eq, C.Ord, C.Show, C.Read, C.Data, C.Typeable, C.Generic)

newtype TokElemOf = TokElemOf ((C.Int, C.Int), Data.Text.Text)
  deriving (C.Eq, C.Ord, C.Show, C.Read, C.Data, C.Typeable, C.Generic)

newtype TokLambda = TokLambda ((C.Int, C.Int), Data.Text.Text)
  deriving (C.Eq, C.Ord, C.Show, C.Read, C.Data, C.Typeable, C.Generic)

newtype TokLet = TokLet ((C.Int, C.Int), Data.Text.Text)
  deriving (C.Eq, C.Ord, C.Show, C.Read, C.Data, C.Typeable, C.Generic)

newtype TokUnit = TokUnit ((C.Int, C.Int), Data.Text.Text)
  deriving (C.Eq, C.Ord, C.Show, C.Read, C.Data, C.Typeable, C.Generic)

newtype TokBool = TokBool ((C.Int, C.Int), Data.Text.Text)
  deriving (C.Eq, C.Ord, C.Show, C.Read, C.Data, C.Typeable, C.Generic)

newtype TokNat = TokNat ((C.Int, C.Int), Data.Text.Text)
  deriving (C.Eq, C.Ord, C.Show, C.Read, C.Data, C.Typeable, C.Generic)

newtype TokInt = TokInt ((C.Int, C.Int), Data.Text.Text)
  deriving (C.Eq, C.Ord, C.Show, C.Read, C.Data, C.Typeable, C.Generic)

newtype TokRat = TokRat ((C.Int, C.Int), Data.Text.Text)
  deriving (C.Eq, C.Ord, C.Show, C.Read, C.Data, C.Typeable, C.Generic)

newtype TokVector = TokVector ((C.Int, C.Int), Data.Text.Text)
  deriving (C.Eq, C.Ord, C.Show, C.Read, C.Data, C.Typeable, C.Generic)

newtype TokTensor = TokTensor ((C.Int, C.Int), Data.Text.Text)
  deriving (C.Eq, C.Ord, C.Show, C.Read, C.Data, C.Typeable, C.Generic)

newtype TokList = TokList ((C.Int, C.Int), Data.Text.Text)
  deriving (C.Eq, C.Ord, C.Show, C.Read, C.Data, C.Typeable, C.Generic)

newtype TokIndex = TokIndex ((C.Int, C.Int), Data.Text.Text)
  deriving (C.Eq, C.Ord, C.Show, C.Read, C.Data, C.Typeable, C.Generic)

newtype TokForall = TokForall ((C.Int, C.Int), Data.Text.Text)
  deriving (C.Eq, C.Ord, C.Show, C.Read, C.Data, C.Typeable, C.Generic)

newtype TokExists = TokExists ((C.Int, C.Int), Data.Text.Text)
  deriving (C.Eq, C.Ord, C.Show, C.Read, C.Data, C.Typeable, C.Generic)

newtype TokForeach = TokForeach ((C.Int, C.Int), Data.Text.Text)
  deriving (C.Eq, C.Ord, C.Show, C.Read, C.Data, C.Typeable, C.Generic)

newtype TokImpl = TokImpl ((C.Int, C.Int), Data.Text.Text)
  deriving (C.Eq, C.Ord, C.Show, C.Read, C.Data, C.Typeable, C.Generic)

newtype TokAnd = TokAnd ((C.Int, C.Int), Data.Text.Text)
  deriving (C.Eq, C.Ord, C.Show, C.Read, C.Data, C.Typeable, C.Generic)

newtype TokOr = TokOr ((C.Int, C.Int), Data.Text.Text)
  deriving (C.Eq, C.Ord, C.Show, C.Read, C.Data, C.Typeable, C.Generic)

newtype TokNot = TokNot ((C.Int, C.Int), Data.Text.Text)
  deriving (C.Eq, C.Ord, C.Show, C.Read, C.Data, C.Typeable, C.Generic)

newtype TokEq = TokEq ((C.Int, C.Int), Data.Text.Text)
  deriving (C.Eq, C.Ord, C.Show, C.Read, C.Data, C.Typeable, C.Generic)

newtype TokNeq = TokNeq ((C.Int, C.Int), Data.Text.Text)
  deriving (C.Eq, C.Ord, C.Show, C.Read, C.Data, C.Typeable, C.Generic)

newtype TokLe = TokLe ((C.Int, C.Int), Data.Text.Text)
  deriving (C.Eq, C.Ord, C.Show, C.Read, C.Data, C.Typeable, C.Generic)

newtype TokLt = TokLt ((C.Int, C.Int), Data.Text.Text)
  deriving (C.Eq, C.Ord, C.Show, C.Read, C.Data, C.Typeable, C.Generic)

newtype TokGe = TokGe ((C.Int, C.Int), Data.Text.Text)
  deriving (C.Eq, C.Ord, C.Show, C.Read, C.Data, C.Typeable, C.Generic)

newtype TokGt = TokGt ((C.Int, C.Int), Data.Text.Text)
  deriving (C.Eq, C.Ord, C.Show, C.Read, C.Data, C.Typeable, C.Generic)

newtype TokMul = TokMul ((C.Int, C.Int), Data.Text.Text)
  deriving (C.Eq, C.Ord, C.Show, C.Read, C.Data, C.Typeable, C.Generic)

newtype TokDiv = TokDiv ((C.Int, C.Int), Data.Text.Text)
  deriving (C.Eq, C.Ord, C.Show, C.Read, C.Data, C.Typeable, C.Generic)

newtype TokAdd = TokAdd ((C.Int, C.Int), Data.Text.Text)
  deriving (C.Eq, C.Ord, C.Show, C.Read, C.Data, C.Typeable, C.Generic)

newtype TokSub = TokSub ((C.Int, C.Int), Data.Text.Text)
  deriving (C.Eq, C.Ord, C.Show, C.Read, C.Data, C.Typeable, C.Generic)

newtype TokNil = TokNil ((C.Int, C.Int), Data.Text.Text)
  deriving (C.Eq, C.Ord, C.Show, C.Read, C.Data, C.Typeable, C.Generic)

newtype TokSeqOpen = TokSeqOpen ((C.Int, C.Int), Data.Text.Text)
  deriving (C.Eq, C.Ord, C.Show, C.Read, C.Data, C.Typeable, C.Generic)

newtype TokSeqClose = TokSeqClose ((C.Int, C.Int), Data.Text.Text)
  deriving (C.Eq, C.Ord, C.Show, C.Read, C.Data, C.Typeable, C.Generic)

newtype TokCons = TokCons ((C.Int, C.Int), Data.Text.Text)
  deriving (C.Eq, C.Ord, C.Show, C.Read, C.Data, C.Typeable, C.Generic)

newtype TokAt = TokAt ((C.Int, C.Int), Data.Text.Text)
  deriving (C.Eq, C.Ord, C.Show, C.Read, C.Data, C.Typeable, C.Generic)

newtype TokMap = TokMap ((C.Int, C.Int), Data.Text.Text)
  deriving (C.Eq, C.Ord, C.Show, C.Read, C.Data, C.Typeable, C.Generic)

newtype TokFold = TokFold ((C.Int, C.Int), Data.Text.Text)
  deriving (C.Eq, C.Ord, C.Show, C.Read, C.Data, C.Typeable, C.Generic)

newtype Name = Name ((C.Int, C.Int), Data.Text.Text)
  deriving (C.Eq, C.Ord, C.Show, C.Read, C.Data, C.Typeable, C.Generic)

newtype HoleToken = HoleToken ((C.Int, C.Int), Data.Text.Text)
  deriving (C.Eq, C.Ord, C.Show, C.Read, C.Data, C.Typeable, C.Generic)

newtype TypeToken = TypeToken ((C.Int, C.Int), Data.Text.Text)
  deriving (C.Eq, C.Ord, C.Show, C.Read, C.Data, C.Typeable, C.Generic)

newtype DeclAnnOptionValue = DeclAnnOptionValue ((C.Int, C.Int), Data.Text.Text)
  deriving (C.Eq, C.Ord, C.Show, C.Read, C.Data, C.Typeable, C.Generic)

-- | Start position (line, column) of something.

type BNFC'Position = C.Maybe (C.Int, C.Int)

pattern BNFC'NoPosition :: BNFC'Position
pattern BNFC'NoPosition = C.Nothing

pattern BNFC'Position :: C.Int -> C.Int -> BNFC'Position
pattern BNFC'Position line col = C.Just (line, col)

-- | Get the start position of something.

class HasPosition a where
  hasPosition :: a -> BNFC'Position

instance HasPosition Boolean where
  hasPosition (Boolean (p, _)) = C.Just p

instance HasPosition Natural where
  hasPosition (Natural (p, _)) = C.Just p

instance HasPosition Rational where
  hasPosition (Rational (p, _)) = C.Just p

instance HasPosition TokNetwork where
  hasPosition (TokNetwork (p, _)) = C.Just p

instance HasPosition TokDataset where
  hasPosition (TokDataset (p, _)) = C.Just p

instance HasPosition TokParameter where
  hasPosition (TokParameter (p, _)) = C.Just p

instance HasPosition TokProperty where
  hasPosition (TokProperty (p, _)) = C.Just p

instance HasPosition TokArrow where
  hasPosition (TokArrow (p, _)) = C.Just p

instance HasPosition TokForallT where
  hasPosition (TokForallT (p, _)) = C.Just p

instance HasPosition TokIf where
  hasPosition (TokIf (p, _)) = C.Just p

instance HasPosition TokThen where
  hasPosition (TokThen (p, _)) = C.Just p

instance HasPosition TokElse where
  hasPosition (TokElse (p, _)) = C.Just p

instance HasPosition TokDot where
  hasPosition (TokDot (p, _)) = C.Just p

instance HasPosition TokElemOf where
  hasPosition (TokElemOf (p, _)) = C.Just p

instance HasPosition TokLambda where
  hasPosition (TokLambda (p, _)) = C.Just p

instance HasPosition TokLet where
  hasPosition (TokLet (p, _)) = C.Just p

instance HasPosition TokUnit where
  hasPosition (TokUnit (p, _)) = C.Just p

instance HasPosition TokBool where
  hasPosition (TokBool (p, _)) = C.Just p

instance HasPosition TokNat where
  hasPosition (TokNat (p, _)) = C.Just p

instance HasPosition TokInt where
  hasPosition (TokInt (p, _)) = C.Just p

instance HasPosition TokRat where
  hasPosition (TokRat (p, _)) = C.Just p

instance HasPosition TokVector where
  hasPosition (TokVector (p, _)) = C.Just p

instance HasPosition TokTensor where
  hasPosition (TokTensor (p, _)) = C.Just p

instance HasPosition TokList where
  hasPosition (TokList (p, _)) = C.Just p

instance HasPosition TokIndex where
  hasPosition (TokIndex (p, _)) = C.Just p

instance HasPosition TokForall where
  hasPosition (TokForall (p, _)) = C.Just p

instance HasPosition TokExists where
  hasPosition (TokExists (p, _)) = C.Just p

instance HasPosition TokForeach where
  hasPosition (TokForeach (p, _)) = C.Just p

instance HasPosition TokImpl where
  hasPosition (TokImpl (p, _)) = C.Just p

instance HasPosition TokAnd where
  hasPosition (TokAnd (p, _)) = C.Just p

instance HasPosition TokOr where
  hasPosition (TokOr (p, _)) = C.Just p

instance HasPosition TokNot where
  hasPosition (TokNot (p, _)) = C.Just p

instance HasPosition TokEq where
  hasPosition (TokEq (p, _)) = C.Just p

instance HasPosition TokNeq where
  hasPosition (TokNeq (p, _)) = C.Just p

instance HasPosition TokLe where
  hasPosition (TokLe (p, _)) = C.Just p

instance HasPosition TokLt where
  hasPosition (TokLt (p, _)) = C.Just p

instance HasPosition TokGe where
  hasPosition (TokGe (p, _)) = C.Just p

instance HasPosition TokGt where
  hasPosition (TokGt (p, _)) = C.Just p

instance HasPosition TokMul where
  hasPosition (TokMul (p, _)) = C.Just p

instance HasPosition TokDiv where
  hasPosition (TokDiv (p, _)) = C.Just p

instance HasPosition TokAdd where
  hasPosition (TokAdd (p, _)) = C.Just p

instance HasPosition TokSub where
  hasPosition (TokSub (p, _)) = C.Just p

instance HasPosition TokNil where
  hasPosition (TokNil (p, _)) = C.Just p

instance HasPosition TokSeqOpen where
  hasPosition (TokSeqOpen (p, _)) = C.Just p

instance HasPosition TokSeqClose where
  hasPosition (TokSeqClose (p, _)) = C.Just p

instance HasPosition TokCons where
  hasPosition (TokCons (p, _)) = C.Just p

instance HasPosition TokAt where
  hasPosition (TokAt (p, _)) = C.Just p

instance HasPosition TokMap where
  hasPosition (TokMap (p, _)) = C.Just p

instance HasPosition TokFold where
  hasPosition (TokFold (p, _)) = C.Just p

instance HasPosition Name where
  hasPosition (Name (p, _)) = C.Just p

instance HasPosition HoleToken where
  hasPosition (HoleToken (p, _)) = C.Just p

instance HasPosition TypeToken where
  hasPosition (TypeToken (p, _)) = C.Just p

instance HasPosition DeclAnnOptionValue where
  hasPosition (DeclAnnOptionValue (p, _)) = C.Just p


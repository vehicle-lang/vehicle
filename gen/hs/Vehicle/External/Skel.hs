-- File generated by the BNF Converter (bnfc 2.9.3).

-- Templates for pattern matching on abstract syntax

{-# OPTIONS_GHC -fno-warn-unused-matches #-}

module Vehicle.External.Skel where

import Prelude (($), Either(..), String, (++), Show, show)
import qualified Vehicle.External.Abs

type Err = Either String
type Result = Err String

failure :: Show a => a -> Result
failure x = Left $ "Undefined case: " ++ show x

transBoolean :: Vehicle.External.Abs.Boolean -> Result
transBoolean x = case x of
  Vehicle.External.Abs.Boolean string -> failure x

transNatural :: Vehicle.External.Abs.Natural -> Result
transNatural x = case x of
  Vehicle.External.Abs.Natural string -> failure x

transRational :: Vehicle.External.Abs.Rational -> Result
transRational x = case x of
  Vehicle.External.Abs.Rational string -> failure x

transTokNetwork :: Vehicle.External.Abs.TokNetwork -> Result
transTokNetwork x = case x of
  Vehicle.External.Abs.TokNetwork string -> failure x

transTokDataset :: Vehicle.External.Abs.TokDataset -> Result
transTokDataset x = case x of
  Vehicle.External.Abs.TokDataset string -> failure x

transTokParameter :: Vehicle.External.Abs.TokParameter -> Result
transTokParameter x = case x of
  Vehicle.External.Abs.TokParameter string -> failure x

transTokProperty :: Vehicle.External.Abs.TokProperty -> Result
transTokProperty x = case x of
  Vehicle.External.Abs.TokProperty string -> failure x

transTokArrow :: Vehicle.External.Abs.TokArrow -> Result
transTokArrow x = case x of
  Vehicle.External.Abs.TokArrow string -> failure x

transTokForallT :: Vehicle.External.Abs.TokForallT -> Result
transTokForallT x = case x of
  Vehicle.External.Abs.TokForallT string -> failure x

transTokIf :: Vehicle.External.Abs.TokIf -> Result
transTokIf x = case x of
  Vehicle.External.Abs.TokIf string -> failure x

transTokThen :: Vehicle.External.Abs.TokThen -> Result
transTokThen x = case x of
  Vehicle.External.Abs.TokThen string -> failure x

transTokElse :: Vehicle.External.Abs.TokElse -> Result
transTokElse x = case x of
  Vehicle.External.Abs.TokElse string -> failure x

transTokDot :: Vehicle.External.Abs.TokDot -> Result
transTokDot x = case x of
  Vehicle.External.Abs.TokDot string -> failure x

transTokElemOf :: Vehicle.External.Abs.TokElemOf -> Result
transTokElemOf x = case x of
  Vehicle.External.Abs.TokElemOf string -> failure x

transTokLambda :: Vehicle.External.Abs.TokLambda -> Result
transTokLambda x = case x of
  Vehicle.External.Abs.TokLambda string -> failure x

transTokLet :: Vehicle.External.Abs.TokLet -> Result
transTokLet x = case x of
  Vehicle.External.Abs.TokLet string -> failure x

transTokUnit :: Vehicle.External.Abs.TokUnit -> Result
transTokUnit x = case x of
  Vehicle.External.Abs.TokUnit string -> failure x

transTokBool :: Vehicle.External.Abs.TokBool -> Result
transTokBool x = case x of
  Vehicle.External.Abs.TokBool string -> failure x

transTokNat :: Vehicle.External.Abs.TokNat -> Result
transTokNat x = case x of
  Vehicle.External.Abs.TokNat string -> failure x

transTokInt :: Vehicle.External.Abs.TokInt -> Result
transTokInt x = case x of
  Vehicle.External.Abs.TokInt string -> failure x

transTokRat :: Vehicle.External.Abs.TokRat -> Result
transTokRat x = case x of
  Vehicle.External.Abs.TokRat string -> failure x

transTokVector :: Vehicle.External.Abs.TokVector -> Result
transTokVector x = case x of
  Vehicle.External.Abs.TokVector string -> failure x

transTokTensor :: Vehicle.External.Abs.TokTensor -> Result
transTokTensor x = case x of
  Vehicle.External.Abs.TokTensor string -> failure x

transTokList :: Vehicle.External.Abs.TokList -> Result
transTokList x = case x of
  Vehicle.External.Abs.TokList string -> failure x

transTokIndex :: Vehicle.External.Abs.TokIndex -> Result
transTokIndex x = case x of
  Vehicle.External.Abs.TokIndex string -> failure x

transTokForall :: Vehicle.External.Abs.TokForall -> Result
transTokForall x = case x of
  Vehicle.External.Abs.TokForall string -> failure x

transTokExists :: Vehicle.External.Abs.TokExists -> Result
transTokExists x = case x of
  Vehicle.External.Abs.TokExists string -> failure x

transTokForeach :: Vehicle.External.Abs.TokForeach -> Result
transTokForeach x = case x of
  Vehicle.External.Abs.TokForeach string -> failure x

transTokImpl :: Vehicle.External.Abs.TokImpl -> Result
transTokImpl x = case x of
  Vehicle.External.Abs.TokImpl string -> failure x

transTokAnd :: Vehicle.External.Abs.TokAnd -> Result
transTokAnd x = case x of
  Vehicle.External.Abs.TokAnd string -> failure x

transTokOr :: Vehicle.External.Abs.TokOr -> Result
transTokOr x = case x of
  Vehicle.External.Abs.TokOr string -> failure x

transTokNot :: Vehicle.External.Abs.TokNot -> Result
transTokNot x = case x of
  Vehicle.External.Abs.TokNot string -> failure x

transTokEq :: Vehicle.External.Abs.TokEq -> Result
transTokEq x = case x of
  Vehicle.External.Abs.TokEq string -> failure x

transTokNeq :: Vehicle.External.Abs.TokNeq -> Result
transTokNeq x = case x of
  Vehicle.External.Abs.TokNeq string -> failure x

transTokLe :: Vehicle.External.Abs.TokLe -> Result
transTokLe x = case x of
  Vehicle.External.Abs.TokLe string -> failure x

transTokLt :: Vehicle.External.Abs.TokLt -> Result
transTokLt x = case x of
  Vehicle.External.Abs.TokLt string -> failure x

transTokGe :: Vehicle.External.Abs.TokGe -> Result
transTokGe x = case x of
  Vehicle.External.Abs.TokGe string -> failure x

transTokGt :: Vehicle.External.Abs.TokGt -> Result
transTokGt x = case x of
  Vehicle.External.Abs.TokGt string -> failure x

transTokMul :: Vehicle.External.Abs.TokMul -> Result
transTokMul x = case x of
  Vehicle.External.Abs.TokMul string -> failure x

transTokDiv :: Vehicle.External.Abs.TokDiv -> Result
transTokDiv x = case x of
  Vehicle.External.Abs.TokDiv string -> failure x

transTokAdd :: Vehicle.External.Abs.TokAdd -> Result
transTokAdd x = case x of
  Vehicle.External.Abs.TokAdd string -> failure x

transTokSub :: Vehicle.External.Abs.TokSub -> Result
transTokSub x = case x of
  Vehicle.External.Abs.TokSub string -> failure x

transTokNil :: Vehicle.External.Abs.TokNil -> Result
transTokNil x = case x of
  Vehicle.External.Abs.TokNil string -> failure x

transTokSeqOpen :: Vehicle.External.Abs.TokSeqOpen -> Result
transTokSeqOpen x = case x of
  Vehicle.External.Abs.TokSeqOpen string -> failure x

transTokSeqClose :: Vehicle.External.Abs.TokSeqClose -> Result
transTokSeqClose x = case x of
  Vehicle.External.Abs.TokSeqClose string -> failure x

transTokCons :: Vehicle.External.Abs.TokCons -> Result
transTokCons x = case x of
  Vehicle.External.Abs.TokCons string -> failure x

transTokAt :: Vehicle.External.Abs.TokAt -> Result
transTokAt x = case x of
  Vehicle.External.Abs.TokAt string -> failure x

transTokMap :: Vehicle.External.Abs.TokMap -> Result
transTokMap x = case x of
  Vehicle.External.Abs.TokMap string -> failure x

transTokFold :: Vehicle.External.Abs.TokFold -> Result
transTokFold x = case x of
  Vehicle.External.Abs.TokFold string -> failure x

transName :: Vehicle.External.Abs.Name -> Result
transName x = case x of
  Vehicle.External.Abs.Name string -> failure x

transHoleToken :: Vehicle.External.Abs.HoleToken -> Result
transHoleToken x = case x of
  Vehicle.External.Abs.HoleToken string -> failure x

transTypeToken :: Vehicle.External.Abs.TypeToken -> Result
transTypeToken x = case x of
  Vehicle.External.Abs.TypeToken string -> failure x

transDeclAnnOptionValue :: Vehicle.External.Abs.DeclAnnOptionValue -> Result
transDeclAnnOptionValue x = case x of
  Vehicle.External.Abs.DeclAnnOptionValue string -> failure x

transBinder :: Vehicle.External.Abs.Binder -> Result
transBinder x = case x of
  Vehicle.External.Abs.ExplicitBinder name -> failure x
  Vehicle.External.Abs.ExplicitBinderAnn name tokelemof expr -> failure x
  Vehicle.External.Abs.ImplicitBinder name -> failure x
  Vehicle.External.Abs.ImplicitBinderAnn name tokelemof expr -> failure x
  Vehicle.External.Abs.InstanceBinder name -> failure x
  Vehicle.External.Abs.InstanceBinderAnn name tokelemof expr -> failure x

transArg :: Vehicle.External.Abs.Arg -> Result
transArg x = case x of
  Vehicle.External.Abs.ExplicitArg expr -> failure x
  Vehicle.External.Abs.ImplicitArg expr -> failure x
  Vehicle.External.Abs.InstanceArg expr -> failure x

transLetDecl :: Vehicle.External.Abs.LetDecl -> Result
transLetDecl x = case x of
  Vehicle.External.Abs.LDecl binder expr -> failure x

transLit :: Vehicle.External.Abs.Lit -> Result
transLit x = case x of
  Vehicle.External.Abs.UnitLiteral -> failure x
  Vehicle.External.Abs.NatLiteral natural -> failure x
  Vehicle.External.Abs.RatLiteral rational -> failure x
  Vehicle.External.Abs.BoolLiteral boolean -> failure x

transExpr :: Vehicle.External.Abs.Expr -> Result
transExpr x = case x of
  Vehicle.External.Abs.Type typetoken -> failure x
  Vehicle.External.Abs.Ann expr1 tokelemof expr2 -> failure x
  Vehicle.External.Abs.ForallT tokforallt binders tokdot expr -> failure x
  Vehicle.External.Abs.Let toklet letdecls expr -> failure x
  Vehicle.External.Abs.Lam toklambda binders tokarrow expr -> failure x
  Vehicle.External.Abs.Fun expr1 tokarrow expr2 -> failure x
  Vehicle.External.Abs.App expr arg -> failure x
  Vehicle.External.Abs.Var name -> failure x
  Vehicle.External.Abs.Literal lit -> failure x
  Vehicle.External.Abs.Hole holetoken -> failure x
  Vehicle.External.Abs.Forall tokforall binders tokdot expr -> failure x
  Vehicle.External.Abs.Exists tokexists binders tokdot expr -> failure x
  Vehicle.External.Abs.ForallIn tokforall binders expr1 tokdot expr2 -> failure x
  Vehicle.External.Abs.ExistsIn tokexists binders expr1 tokdot expr2 -> failure x
  Vehicle.External.Abs.Foreach tokforeach binders tokdot expr -> failure x
  Vehicle.External.Abs.If tokif expr1 tokthen expr2 tokelse expr3 -> failure x
  Vehicle.External.Abs.Impl expr1 tokimpl expr2 -> failure x
  Vehicle.External.Abs.And expr1 tokand expr2 -> failure x
  Vehicle.External.Abs.Or expr1 tokor expr2 -> failure x
  Vehicle.External.Abs.Eq expr1 tokeq expr2 -> failure x
  Vehicle.External.Abs.Neq expr1 tokneq expr2 -> failure x
  Vehicle.External.Abs.Not toknot expr -> failure x
  Vehicle.External.Abs.Le expr1 tokle expr2 -> failure x
  Vehicle.External.Abs.Lt expr1 toklt expr2 -> failure x
  Vehicle.External.Abs.Ge expr1 tokge expr2 -> failure x
  Vehicle.External.Abs.Gt expr1 tokgt expr2 -> failure x
  Vehicle.External.Abs.Add expr1 tokadd expr2 -> failure x
  Vehicle.External.Abs.Sub expr1 toksub expr2 -> failure x
  Vehicle.External.Abs.Mul expr1 tokmul expr2 -> failure x
  Vehicle.External.Abs.Div expr1 tokdiv expr2 -> failure x
  Vehicle.External.Abs.Neg toksub expr -> failure x
  Vehicle.External.Abs.VecLiteral tokseqopen exprs tokseqclose -> failure x
  Vehicle.External.Abs.Nil toknil -> failure x
  Vehicle.External.Abs.Cons expr1 tokcons expr2 -> failure x
  Vehicle.External.Abs.At expr1 tokat expr2 -> failure x
  Vehicle.External.Abs.Map tokmap expr1 expr2 -> failure x
  Vehicle.External.Abs.Fold tokfold expr1 expr2 expr3 -> failure x
  Vehicle.External.Abs.Unit tokunit -> failure x
  Vehicle.External.Abs.Bool tokbool -> failure x
  Vehicle.External.Abs.Rat tokrat -> failure x
  Vehicle.External.Abs.Int tokint -> failure x
  Vehicle.External.Abs.Nat toknat -> failure x
  Vehicle.External.Abs.List toklist expr -> failure x
  Vehicle.External.Abs.Vector tokvector expr1 expr2 -> failure x
  Vehicle.External.Abs.Tensor toktensor expr1 expr2 -> failure x
  Vehicle.External.Abs.Index tokindex expr -> failure x

transDeclAnnName :: Vehicle.External.Abs.DeclAnnName -> Result
transDeclAnnName x = case x of
  Vehicle.External.Abs.Network toknetwork -> failure x
  Vehicle.External.Abs.Dataset tokdataset -> failure x
  Vehicle.External.Abs.Parameter tokparameter -> failure x
  Vehicle.External.Abs.Property tokproperty -> failure x

transDeclAnnOption :: Vehicle.External.Abs.DeclAnnOption -> Result
transDeclAnnOption x = case x of
  Vehicle.External.Abs.BooleanOption name boolean -> failure x

transDeclAnnOpts :: Vehicle.External.Abs.DeclAnnOpts -> Result
transDeclAnnOpts x = case x of
  Vehicle.External.Abs.DeclAnnWithOpts declannoptions -> failure x
  Vehicle.External.Abs.DeclAnnWithoutOpts -> failure x

transDecl :: Vehicle.External.Abs.Decl -> Result
transDecl x = case x of
  Vehicle.External.Abs.DefAnn declannname declannopts -> failure x
  Vehicle.External.Abs.DefType name binders expr -> failure x
  Vehicle.External.Abs.DefFunType name tokelemof expr -> failure x
  Vehicle.External.Abs.DefFunExpr name binders expr -> failure x

transProg :: Vehicle.External.Abs.Prog -> Result
transProg x = case x of
  Vehicle.External.Abs.Main decls -> failure x

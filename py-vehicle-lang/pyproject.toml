[build-system]
requires = [
  "find_libpython>=0.3; sys_platform == 'win32'",
  "packaging>=23",
  "setuptools>=45",
  "swig>=4",
]
build-backend = "setuptools.build_meta"

[project]
name = 'vehicle_lang'
authors = [{ name = 'Wen Kokke', email = 'wenkokke@users.noreply.github.com' }]
description = 'A high-level functional language for writing mathematically-precise specifications for neural networks.'
readme = 'README.md'
license = { file = 'LICENSE' }
dynamic = ["version"]
requires-python = ">=3.7.1,<3.12"
dependencies = [
  "typing_extensions >=4.6,<5",
  "astunparse; python_version<'3.9'",
]

[project.optional-dependencies]
pygments = ["pygments >=2.14, <3"]
test = ["pytest >=7.1,<8", "packaging>=23"]
mypy = ["types_setuptools >=45", "types_pygments >=2.14, <3"]

[project.scripts]
vehicle = "vehicle_lang.__main__:main"

[project.entry-points.'pygments.lexers']
vehicle = "vehicle_lang.pygments:VehicleLexer"

[tool.cibuildwheel]
# 18-04-2023:
# Cross-compilation does not work with GHC and Cabal.
archs = ["native"]
build-frontend = "build"
skip = [
  # 18-04-2023:
  # PyPy builds do not work.
  "pp*",
  # 18-04-2023:
  # GHC distributions for Alpine Linux do not include dynamic builds for libraries.
  "*musllinux*"
]
test-command = "pytest {package}/tests"
test-extras = "test"

[tool.cibuildwheel.linux]
before-all = "source /etc/os-release && {package}/scripts/before-all-$ID.sh"

[tool.mypy]
mypy_path = "src"
python_version = 3.7
strict = true
implicit_reexport = false
ignore_missing_imports = true
exclude = ['^src/vehicle_lang/binding\.py$']

[[tool.mypy.overrides]]
module = "vehicle_lang.pygments"
allow_subclassing_any = true

[[tool.mypy.overrides]]
module = "vehicle_lang.pygments._external"
allow_subclassing_any = true
allow_untyped_defs = true
disable_error_code = ['name-defined']

[tool.pytest.ini_options]
testpaths = ["tests"]

[tool.setuptools.dynamic]
version = { attr = "vehicle_lang._version.VERSION" }

[tool.tox]
legacy_tox_ini = """
[tox]
envlist = py37, py38, py39, py310, py311, pygments
isolated_build = true

[testenv]
extras =
  test
commands =
  {envpython} -m pytest {posargs}

[testenv:pygments]
allowlist_externals =
  sh
requires =
  py37
extras =
  pygments
commands =
  sh ./tests/test_pygments.sh {posargs}
"""

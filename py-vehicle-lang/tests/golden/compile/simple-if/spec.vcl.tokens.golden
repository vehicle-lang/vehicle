Token.Keyword.Declaration	'@network'
Token.Space	'\n'
Token.Name	'f'
Token.Space	' '
Token.Punctuation	':'
Token.Space	' '
Token.Name	'Tensor'
Token.Space	' '
Token.Keyword.Type	'Rat'
Token.Space	' '
Token.Operator	'['
Token.Literal.Number.Integer	'1'
Token.Operator	']'
Token.Space	' '
Token.Operator	'->'
Token.Space	' '
Token.Name	'Tensor'
Token.Space	' '
Token.Keyword.Type	'Rat'
Token.Space	' '
Token.Operator	'['
Token.Literal.Number.Integer	'1'
Token.Operator	']'
Token.Space	'\n\n'
Token.Keyword.Declaration	'@property'
Token.Space	'\n'
Token.Name	'prop1'
Token.Space	' '
Token.Punctuation	':'
Token.Space	' '
Token.Keyword.Type	'Bool'
Token.Space	'\n'
Token.Name	'prop1'
Token.Space	' '
Token.Punctuation	'='
Token.Space	' '
Token.Keyword	'forall'
Token.Space	' '
Token.Name	'x'
Token.Space	' '
Token.Punctuation	'.'
Token.Space	' '
Token.Keyword	'if'
Token.Space	' '
Token.Name	'x'
Token.Space	' '
Token.Operator	'>'
Token.Space	' '
Token.Literal.Number.Integer	'0'
Token.Space	' '
Token.Keyword	'then'
Token.Space	' '
Token.Name	'f'
Token.Space	' '
Token.Operator	'['
Token.Name	'x'
Token.Operator	']'
Token.Space	' '
Token.Operator	'!'
Token.Space	' '
Token.Literal.Number.Integer	'0'
Token.Space	' '
Token.Operator	'>'
Token.Space	' '
Token.Literal.Number.Integer	'0'
Token.Space	' '
Token.Keyword	'else'
Token.Space	' '
Token.Name	'f'
Token.Space	' '
Token.Operator	'['
Token.Name	'x'
Token.Operator	']'
Token.Space	' '
Token.Operator	'!'
Token.Space	' '
Token.Literal.Number.Integer	'0'
Token.Space	' '
Token.Operator	'<='
Token.Space	' '
Token.Literal.Number.Integer	'0'
Token.Space	'\n\n'
Token.Keyword.Declaration	'@property'
Token.Space	'\n'
Token.Name	'prop2'
Token.Space	' '
Token.Punctuation	':'
Token.Space	' '
Token.Keyword.Type	'Bool'
Token.Space	'\n'
Token.Name	'prop2'
Token.Space	' '
Token.Punctuation	'='
Token.Space	' '
Token.Keyword	'exists'
Token.Space	' '
Token.Name	'x'
Token.Space	' '
Token.Punctuation	'.'
Token.Space	' '
Token.Name	'f'
Token.Space	' '
Token.Operator	'['
Token.Keyword	'if'
Token.Space	' '
Token.Name	'x'
Token.Space	' '
Token.Operator	'>'
Token.Space	' '
Token.Literal.Number.Integer	'0'
Token.Space	' '
Token.Keyword	'then'
Token.Space	' '
Token.Name	'x'
Token.Space	' '
Token.Keyword	'else'
Token.Space	' '
Token.Literal.Number.Integer	'0'
Token.Punctuation	'.'
Token.Literal.Number.Integer	'2'
Token.Operator	']'
Token.Space	' '
Token.Operator	'!'
Token.Space	' '
Token.Literal.Number.Integer	'0'
Token.Space	' '
Token.Operator	'>='
Token.Space	' '
Token.Literal.Number.Integer	'0'
Token.Space	'\n\n'
Token.Keyword.Declaration	'@property'
Token.Space	'\n'
Token.Name	'prop3'
Token.Space	' '
Token.Punctuation	':'
Token.Space	' '
Token.Keyword.Type	'Bool'
Token.Space	'\n'
Token.Name	'prop3'
Token.Space	' '
Token.Punctuation	'='
Token.Space	' '
Token.Keyword	'exists'
Token.Space	' '
Token.Name	'x'
Token.Space	' '
Token.Punctuation	'.'
Token.Space	' '
Token.Keyword	'if'
Token.Space	' '
Token.Name	'f'
Token.Space	' '
Token.Operator	'['
Token.Name	'x'
Token.Operator	']'
Token.Space	' '
Token.Operator	'!'
Token.Space	' '
Token.Literal.Number.Integer	'0'
Token.Space	' '
Token.Operator	'>'
Token.Space	' '
Token.Literal.Number.Integer	'0'
Token.Space	' '
Token.Keyword	'then'
Token.Space	' '
Token.Name	'x'
Token.Space	' '
Token.Operator	'>='
Token.Space	' '
Token.Literal.Number.Integer	'0'
Token.Space	' '
Token.Keyword	'else'
Token.Space	' '
Token.Name	'x'
Token.Space	' '
Token.Operator	'<'
Token.Space	' '
Token.Literal.Number.Integer	'0'
Token.Space	'\n\n'
Token.Comment	'-- @network\n'
Token.Comment	'-- g : Vector Rat 1 -> Vector Rat 2\n'
Token.Space	'\n'
Token.Comment	'-- @property\n'
Token.Comment	'-- prop4 : Bool\n'
Token.Comment	'-- prop4 = exists x . (map (\\v -> if v > 0 then 1 else 2) (g x)) ! 0 > 0\n'

-- WARNING: This file was generated automatically by Vehicle
-- and should not be modified manually!
-- Metadata
--  - Agda version: 2.6.2
--  - AISEC version: 0.1.0.1
--  - Time generated: ???

{-# OPTIONS --allow-exec #-}

open import Vehicle
open import Vehicle.Data.Tensor
open import Data.Product
open import Data.Sum
open import Data.Integer as ℤ using (ℤ)
open import Data.Rational as ℝ using () renaming (ℚ to ℝ)
open import Data.Fin as Fin using (#_)
open import Data.List
open import Relation.Binary.PropositionalEquality

module acasXu-property6-temp-output where

pi : ℝ
pi = ℤ.+ 392699 ℝ./ 125000

InputVector : Set
InputVector = Tensor ℝ (5 ∷ [])

OutputVector : Set
OutputVector = Tensor ℝ (5 ∷ [])

postulate acasXu : InputVector → OutputVector

distanceToIntruder : InputVector → ℝ
distanceToIntruder x = x (# 0)

angleToIntruder : InputVector → ℝ
angleToIntruder x = x (# 1)

intruderHeading : InputVector → ℝ
intruderHeading x = x (# 2)

speed : InputVector → ℝ
speed x = x (# 3)

intruderSpeed : InputVector → ℝ
intruderSpeed x = x (# 4)

clearOfConflictScore : InputVector → ℝ
clearOfConflictScore x = acasXu x (# 0)

IntruderFarAway : InputVector → Set
IntruderFarAway x = (ℝ.- pi ℝ.≤ angleToIntruder x × angleToIntruder x ℝ.≤ ℝ.- (ℤ.+ 7 ℝ./ 10) ⊎ ℤ.+ 7 ℝ./ 10 ℝ.≤ angleToIntruder x × angleToIntruder x ℝ.≤ pi) × ((ℤ.+ 12000 ℝ./ 1 ℝ.≤ distanceToIntruder x × distanceToIntruder x ℝ.≤ ℤ.+ 62000 ℝ./ 1) × ((ℝ.- pi ℝ.≤ intruderHeading x × intruderHeading x ℝ.≤ ℝ.- pi ℝ.+ ℤ.+ 1 ℝ./ 200) × ((ℤ.+ 100 ℝ./ 1 ℝ.≤ speed x × speed x ℝ.≤ ℤ.+ 1200 ℝ./ 1) × (ℤ.+ 0 ℝ./ 1 ℝ.≤ intruderSpeed x × intruderSpeed x ℝ.≤ ℤ.+ 1200 ℝ./ 1))))

AdvisesClearOfConflict : InputVector → Set
AdvisesClearOfConflict x = ∀ (i : Fin 5) → i ≢ # 0 → acasXu x (# 0) ℝ.> acasXu x i

abstract
  property6 : ∀ (x : Tensor ℝ (5 ∷ [])) → IntruderFarAway x → AdvisesClearOfConflict x
  property6 = checkProperty record
    { proofCache   = "/home/matthew/Code/AISEC/vehicle/proofcache.vclp"
    }
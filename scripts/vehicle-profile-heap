#!/bin/sh

# POSIX compliant method for 'pipefail':
fail=$(mktemp)

# Check if 'eventlog2html' is on the PATH:
EVENTLOG2HTML=$(which eventlog2html || echo > "$fail")

if [ -s "$fail" ]; then
    rm "$fail"
    echo "The vehicle-profile-heap script requires 'eventlog2html' to visualise the event log."
    echo "You can install 'eventlog2html' by running:"
    echo
    echo "  cabal v2-install eventlog2html --ignore-project --overwrite-policy=always"
    echo
    echo "See: https://mpickering.github.io/eventlog2html/"
    exit 1
fi

# Check the HEAP_PROFILE_TYPE setting:
HEAP_PROFILE_TYPE="${HEAP_PROFILE_TYPE--hT}"
if [ "$HEAP_PROFILE_TYPE" = "-hT" ]; then
    echo "Type of profile: Basic heap profile"
    elif [ "$HEAP_PROFILE_TYPE" = "-hi" ]; then
    echo "Type of profile: Info table profile"
else
    echo "Usage: HEAP_PROFILE_TYPE=[-hT or -hi] ./scripts/vehicle-profile [VEHICLE OPTIONS]"
    echo "Error: expected HEAP_PROFILE_TYPE to be -hT or -hi, found $HEAP_PROFILE_TYPE"
fi

# Create the directory for profiling files:
PROFILING_DIR=".profiling"
[ ! -s "$fail" ] && (mkdir -p "$PROFILING_DIR" || echo > "$fail")

# Create the timestamped filenames for profiling files:
TIMESTAMP=$(awk 'BEGIN{srand(); print srand()}')
PROFILING_PREFIX="$PROFILING_DIR/vehicle-$TIMESTAMP"
EVENTLOG_FILE="$PROFILING_PREFIX$HEAP_PROFILE_TYPE.eventlog"
EVENTLOG_HTML="$EVENTLOG_FILE.html"

# Build vehicle in heap profiling mode with the given options.
CABAL_BUILD="cabal -v1 --project-file=cabal.project.profile-heap build vehicle:exe:vehicle"
[ ! -s "$fail" ] && ($CABAL_BUILD || echo > "$fail")

# On interrupt, kill Vehicle and reset trap.
_on_interrupt() {
    echo "Forward SIGINT to Vehicle"
    kill -INT "$CHILD_PID" 2>/dev/null
    trap - INT
}
trap _on_interrupt INT

# Run vehicle in heap profiling mode with the given options.
RTSOPTS="+RTS -po$PROFILING_PREFIX -ol$EVENTLOG_FILE -s -l ${HEAP_PROFILE_TYPE} -RTS"
CABAL_RUN="cabal -v0 --project-file=cabal.project.profile-heap run vehicle:exe:vehicle -- $* $RTSOPTS"
if [ ! -s "$fail" ]; then
    echo "$CABAL_RUN"
    $CABAL_RUN || echo > "$fail" &
    CHILD_PID=$!
    wait "$CHILD_PID"
    trap - INT
fi

# If no eventlog was generated, exit.
if [ ! -f "$EVENTLOG_FILE" ]; then
    echo "No eventlog was generated; did you kill the process too soon?"
    exit 1
else
    # Convert the heap profile to an HTML page.
    $EVENTLOG2HTML "$EVENTLOG_FILE" || echo > "$fail"

    # Output the path to the generated HTML page.
    [ -f "$EVENTLOG_HTML" ] && (echo "Wrote eventlog to $EVENTLOG_FILE.html")
fi

# Check whether or not any subcommand failed:
if [ -s "$fail" ]; then
    rm "$fail"
    echo "Error occurred while profiling; see above."
    exit 1
else
    rm "$fail"
fi

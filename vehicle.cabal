cabal-version:      3.0
name:               vehicle
version:            0.1.0.1
description:
  Please see the README on GitHub at <https://github.com/wenkokke/vehicle#readme>

homepage:           https://github.com/wenkokke/vehicle#readme
bug-reports:        https://github.com/wenkokke/vehicle/issues
author:             Wen Kokke
maintainer:         wenkokke@users.noreply.github.com
copyright:          Â© Wen Kokke
license:            BSD-3-Clause
license-file:       LICENSE
build-type:         Simple
extra-source-files:
  ChangeLog.md
  README.md

source-repository head
  type:     git
  location: https://github.com/wecankokke/vehicle

common common-base
  default-extensions:
    ConstraintKinds
    ConstraintKinds
    DataKinds
    DeriveFoldable
    DeriveFunctor
    DeriveGeneric
    DeriveTraversable
    DuplicateRecordFields
    FlexibleContexts
    FlexibleInstances
    FunctionalDependencies
    GADTs
    ImportQualifiedPost
    InstanceSigs
    KindSignatures
    LambdaCase
    LiberalTypeSynonyms
    MultiParamTypeClasses
    OverloadedLists
    OverloadedStrings
    PatternSynonyms
    PolyKinds
    RankNTypes
    RecordWildCards
    ScopedTypeVariables
    TupleSections
    TypeApplications
    TypeFamilies
    TypeOperators
    UndecidableInstances
    ViewPatterns

  build-depends:
    , base                  >=4.13 && <5
    , containers            >=0.5  && <1
    , deepseq               >=1.4  && <2
    , directory
    , filepath              >=1.4  && <2
    , hashable              >=1.3  && <2
    , mtl                   >=2.2  && <3
    , optparse-applicative  >=0.16 && <1
    , process
    , text                  >=1.2  && <3
    , recursion-schemes     >=5.2  && <6

  default-language:   Haskell2010

------------------
-- Build system --
------------------

-- The executable for the Shake build system
executable vehicle-build-system
  main-is:            build.hs
  build-depends:
    , array      >=0.5  && <1
    , base       >=4.13 && <5
    , directory
    , shake
    , text       >=1.2  && <3

  default-language:   Haskell2010
  default-extensions:
    ImportQualifiedPost
    OverloadedLists

-----------------
-- BNFC parser --
-----------------

-- Sub-library containing files generated by BNFC
library vehicle-bnfc
  hs-source-dirs:   gen/hs
  exposed-modules:
    Vehicle.External.Abs
    Vehicle.External.ErrM
    Vehicle.External.Layout
    Vehicle.External.Lex
    Vehicle.External.Par
    Vehicle.External.Print
    Vehicle.Internal.Abs
    Vehicle.Internal.ErrM
    Vehicle.Internal.Lex
    Vehicle.Internal.Par
    Vehicle.Internal.Print

  build-depends:
    , array  >=0.5  && <1
    , base   >=4.13 && <5
    , text   >=1.2  && <3

  default-language: Haskell2010

------------------
-- Main library --
------------------

-- The main Vehicle library
library
  import:          common-base
  hs-source-dirs:  src/hs
  exposed-modules:
    Vehicle
    Vehicle.Backend.Agda
    Vehicle.Backend.LossFunction
    Vehicle.Backend.Prelude
    Vehicle.Check
    Vehicle.CommandLine
    Vehicle.Compile
    Vehicle.Compile.AlphaEquivalence
    Vehicle.Compile.CoDeBruijnify
    Vehicle.Compile.Delaborate.External
    Vehicle.Compile.Delaborate.Internal
    Vehicle.Compile.Descope
    Vehicle.Compile.Elaborate.External
    Vehicle.Compile.Elaborate.Internal
    Vehicle.Compile.Error
    Vehicle.Compile.Error.Message
    Vehicle.Compile.ExpandResources
    Vehicle.Compile.ExpandResources.Core
    Vehicle.Compile.ExpandResources.Dataset
    Vehicle.Compile.ExpandResources.Network
    Vehicle.Compile.ExpandResources.Parameter
    Vehicle.Compile.LetInsertion
    Vehicle.Compile.Linearity
    Vehicle.Compile.Linearity.Core
    Vehicle.Compile.Linearity.FourierMotzkinElimination
    Vehicle.Compile.Linearity.GaussianElimination
    Vehicle.Compile.Normalise
    Vehicle.Compile.Normalise.Core
    Vehicle.Compile.Parse
    Vehicle.Compile.Prelude
    Vehicle.Compile.Queries.DNF
    Vehicle.Compile.Queries.IfElimination
    Vehicle.Compile.Queries.QuantifierLifting
    Vehicle.Compile.Queries.UserVariables
    Vehicle.Compile.Resource
    Vehicle.Compile.Scope
    Vehicle.Compile.Simplify
    Vehicle.Compile.Sugar
    Vehicle.Compile.SupplyNames
    Vehicle.Compile.Type
    Vehicle.Export
    Vehicle.Language.AST
    Vehicle.Language.DSL
    Vehicle.Language.Print
    Vehicle.Language.StandardLibrary
    Vehicle.Language.StandardLibrary.Names
    Vehicle.Prelude
    Vehicle.Resource
    Vehicle.Verify
    Vehicle.Verify.Core
    Vehicle.Verify.ProofCache
    Vehicle.Verify.Specification
    Vehicle.Verify.Specification.IO
    Vehicle.Verify.Specification.Status
    Vehicle.Verify.Verifier.Interface

  other-modules:
    Paths_vehicle
    Vehicle.Backend.Agda.Compile
    Vehicle.Backend.Agda.Interact
    Vehicle.Backend.LossFunction.Compile
    Vehicle.Backend.LossFunction.Interact
    Vehicle.Compile.CapitaliseTypeNames
    Vehicle.Compile.DependencyAnalysis
    Vehicle.Compile.ExpandResources.Dataset.IDX
    Vehicle.Compile.Monomorphisation
    Vehicle.Compile.Prelude.Contexts
    Vehicle.Compile.Prelude.DependencyGraph
    Vehicle.Compile.Prelude.Patterns
    Vehicle.Compile.Prelude.Utils
    Vehicle.Compile.QuantifierAnalysis
    Vehicle.Compile.Queries
    Vehicle.Compile.Type.Auxiliary
    Vehicle.Compile.Type.Bidirectional
    Vehicle.Compile.Type.Builtin
    Vehicle.Compile.Type.Constraint
    Vehicle.Compile.Type.ConstraintSolver.Core
    Vehicle.Compile.Type.ConstraintSolver.Linearity
    Vehicle.Compile.Type.ConstraintSolver.Polarity
    Vehicle.Compile.Type.ConstraintSolver.TypeClass
    Vehicle.Compile.Type.ConstraintSolver.TypeClassDefaults
    Vehicle.Compile.Type.ConstraintSolver.Unification
    Vehicle.Compile.Type.Generalise
    Vehicle.Compile.Type.Irrelevance
    Vehicle.Compile.Type.Meta
    Vehicle.Compile.Type.MetaMap
    Vehicle.Compile.Type.MetaSet
    Vehicle.Compile.Type.Monad
    Vehicle.Compile.Type.Resource
    Vehicle.Compile.Type.VariableContext
    Vehicle.Language.AST.Builtin
    Vehicle.Language.AST.Builtin.Core
    Vehicle.Language.AST.Builtin.Linearity
    Vehicle.Language.AST.Builtin.Polarity
    Vehicle.Language.AST.Builtin.TypeClass
    Vehicle.Language.AST.CoDeBruijn
    Vehicle.Language.AST.Core
    Vehicle.Language.AST.DeBruijn
    Vehicle.Language.AST.Name
    Vehicle.Language.AST.Position
    Vehicle.Language.AST.Provenance
    Vehicle.Language.AST.Relevance
    Vehicle.Language.AST.Visibility
    Vehicle.Prelude.DeveloperError
    Vehicle.Prelude.IO
    Vehicle.Prelude.Logging
    Vehicle.Prelude.Prettyprinter
    Vehicle.Prelude.Supply
    Vehicle.Prelude.Token
    Vehicle.Verify.Verifier
    Vehicle.Verify.Verifier.Marabou

  -- Files generated by Cabal
  build-depends:
    , aeson
    , aeson-pretty
    , ansi-terminal         >=0.6     && <1
    , bytestring
    , data-default          >=0.7     && <1
    , data-default-class
    , data-fix              >=0.2     && <1
    , linkedhashmap         >=0.4     && <1
    , mnist-idx             >=0.1.3.1
    , prettyprinter         >=1.7     && <2
    , range                 >=0.3     && <1
    , split
    , temporary
    , transformers          >=0.4     && <0.6
    , unordered-containers
    , vector
    , vehicle-bnfc

  -- Used for parsing IDX format
  ghc-options:     -Werror -Wall -fprint-potential-instances

---------------------
-- Main executable --
---------------------

executable vehicle
  import:         common-base
  main-is:        Main.hs
  hs-source-dirs: app
  build-depends:  vehicle

-----------------
-- Test suites --
-----------------

common common-test-base
  import:         common-base
  hs-source-dirs: test
  other-modules:
    Vehicle.Test.CheckMode
    Vehicle.Test.CheckMode.Golden
    Vehicle.Test.CompileMode
    Vehicle.Test.CompileMode.Error
    Vehicle.Test.CompileMode.Golden
    Vehicle.Test.CompileMode.Unit
    Vehicle.Test.CompileMode.Unit.AlphaEquivalence
    Vehicle.Test.CompileMode.Unit.CoDeBruijn
    Vehicle.Test.CompileMode.Unit.CommandLine
    Vehicle.Test.CompileMode.Unit.IfElimination
    Vehicle.Test.CompileMode.Unit.LetInsertion
    Vehicle.Test.CompileMode.Unit.PositionTree
    Vehicle.Test.CompileMode.Unit.QuantifierLifting
    Vehicle.Test.Utils
    Vehicle.Test.Utils.FilePath
    Vehicle.Test.Utils.Golden
    Vehicle.Test.Utils.TestProgram
    Vehicle.Test.VerifyMode
    Vehicle.Test.VerifyMode.Golden

  -- , Vehicle.Test.CompileMode.Generative
  -- , Vehicle.Test.CompileMode.Generative.Generator
  -- , Vehicle.Test.CompileMode.Generative.ToVehicle

  build-depends:
    , Diff
    , regex-tdfa
    , tasty
    , tasty-bench   >=0.3 && <1
    , tasty-golden
    , tasty-hunit
    , vehicle

-- Clone of tasty-program in `Vehicle.Test.Utils.TestProgram`
-- , tasty-program >=1.0.5 && <2

-- For generation of terms
-- , lazy-search
-- , size-based
-- , testing-feat
-- , bifunctors
-- , mtl

test-suite vehicle-executable-tests
  import:      common-test-base
  type:        exitcode-stdio-1.0
  main-is:     Vehicle/Test/TestExecutable.hs
  ghc-options: -threaded -rtsopts -with-rtsopts=-N -O0

test-suite vehicle-integration-tests
  import:      common-test-base
  type:        exitcode-stdio-1.0
  main-is:     Vehicle/Test/TestIntegration.hs
  ghc-options: -threaded -rtsopts -with-rtsopts=-N -O0

benchmark vehicle-benchmarks
  import:  common-test-base
  type:    exitcode-stdio-1.0
  main-is: Vehicle/Test/TestPerformance.hs

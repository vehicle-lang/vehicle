Something went wrong in query compilation: CannotEliminateNot[ not ((or (not ((forallIndex 4) (lambda (i : Index .( 4)) (((forall {pi (j : Index .( 4)) Bool} ) {{forallIndex 4 }}) (lambda (j : Index .( 4)) (validPixel ((((! {Rat} ) .{ 4} ) ((((! {(Vector Rat) .( 4)} ) .{ 4} ) 𝓲2) 𝓲1)) 𝓲0)))))))) ((and ((and (not ((and ((forallIndex 6) (lambda (d : Index .( 6)) ((=> (((((!= {Index .( 6)} ) {Index .( 6)} ) {{(notEqualsIndex {6} ) {6} }}) 𝓲0) 𝓲2)) (((((> {Rat} ) {Rat} ) {{gtRat }}) ((((! {Rat} ) .{ 6} ) 𝓲1) 𝓲2)) ((((! {Rat} ) .{ 6} ) 𝓲1) 𝓲0)))))) ((existsIndex 6) (lambda (dog1 : Index .( 6)) ((and ((isFirstChoice 𝓲3) 𝓲0)) (((forall {pi (d : Index .( 6)) Bool} ) {{forallIndex 6 }}) (lambda (d : Index .( 6)) ((=> ((and (((((!= {Index .( 6)} ) {Index .( 6)} ) {{(notEqualsIndex {6} ) {6} }}) 𝓲0) 𝓲1)) (((((!= {Index .( 6)} ) {Index .( 6)} ) {{(notEqualsIndex {6} ) {6} }}) 𝓲0) 𝓲3))) (((((> {Rat} ) {Rat} ) {{gtRat }}) ((((! {Rat} ) .{ 6} ) 𝓲2) 𝓲3)) ((((! {Rat} ) .{ 6} ) 𝓲2) 𝓲0))))))))))) (((foldList (lambda (x : Bool) (lambda (y : Bool) ((and 𝓲1) 𝓲0)))) True) ((mapList (lambda (dog2 : Index .( 6)) (not ((and ((isFirstChoice 𝓲4) 𝓲1)) ((isSecondChoice 𝓲4) 𝓲0))))) (((:: {Index .( 6)} ) 5) (nil {Index .( 6)} )))))) (((foldList (lambda (x : Bool) (lambda (y : Bool) ((and 𝓲1) 𝓲0)))) True) ((mapList (lambda (dog1 : Index .( 6)) ((((((forallIn {Index .( 6)} ) {List} ) {{foldList }}) {{mapList }}) (lambda (dog2 : Index .( 6)) (not ((and ((isFirstChoice 𝓲4) 𝓲1)) ((isSecondChoice 𝓲4) 𝓲0))))) 𝓲1))) (((:: {Index .( 6)} ) 2) (nil {Index .( 6)} )))))) ]

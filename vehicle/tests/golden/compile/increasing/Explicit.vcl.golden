vectorToVector : Vector Rat -> Vector Rat;
vectorToVector xs = xs

type Tensor A ds = fold (\ d -> \ t -> Vector t) A ds

vectorToList : Vector Nat -> List Nat;
vectorToList = (\ {A} -> \ {B} -> \ f -> dfold f) (\ x -> \ xs -> x :: xs) nil

@property;
increasing : forallT (f : Tensor Rat (1 :: nil) -> Tensor Rat (1 :: nil)) . Bool;
increasing f = forall x . x <= f [x] ! 0
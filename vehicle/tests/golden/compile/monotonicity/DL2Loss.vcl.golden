bigAnd : List Rat -> Rat;
bigAnd _x0 = fold (\ x -> \ y -> x + y) 0.0 _x0

type Tensor A ds = fold (\ d -> \ t -> Vector t) A ds

@property;
monotonic : forallT (f : Tensor Rat (1 :: nil) -> Tensor Rat (1 :: nil)) . Rat;
monotonic f = bigAnd (map (\ x1 -> bigAnd (map (\ x2 -> max 0.0 (max 0.0 (x1 - x2) * max 0.0 (f [x1] ! 0 - f [x2] ! 0))) sample[x2][x1])) sample[x1][])
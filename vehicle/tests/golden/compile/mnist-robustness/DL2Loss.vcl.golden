bigAnd : Vector Rat -> Rat;
bigAnd _x0 = fold (\ x -> \ y -> x + y) 0.0 _x0

subVector--Rat--Rat--Rat : Vector Rat -> Vector Rat -> Vector Rat;
subVector--Rat--Rat--Rat _x0 _x1 = zipWith (\ x -> \ y -> x - y) _x0 _x1

subVector--Vector-Rat--Vector-Rat--Vector-Rat : Vector (Vector Rat) -> Vector (Vector Rat) -> Vector (Vector Rat);
subVector--Vector-Rat--Vector-Rat--Vector-Rat _x0 _x1 = zipWith (\ x -> \ y -> subVector--Rat--Rat--Rat x y) _x0 _x1

validImage : Vector (Vector Rat) -> Rat;
validImage x = bigAnd (map (\ i -> bigAnd (map (\ j -> max 0.0 (0.0 - x ! i ! j) + (if 0.0 == x ! i ! j then 1.0 else 0.0) + (max 0.0 (x ! i ! j - 1.0) + (if x ! i ! j == 1.0 then 1.0 else 0.0))) (indices 28))) (indices 28))

advises : forallT (classifier : Vector (Vector Rat) -> Vector Rat) . Vector (Vector Rat) -> Index -> Rat;
advises classifier x i = bigAnd (map (\ j -> max 0.0 ((if j != i then 0.0 else 1.0) * max 0.0 (classifier x ! j - classifier x ! i))) (indices 10))

boundedByEpsilon : forallT (epsilon : Rat) . Vector (Vector Rat) -> Rat;
boundedByEpsilon epsilon x = bigAnd (map (\ i -> bigAnd (map (\ j -> max 0.0 (- epsilon - x ! i ! j) + (if - epsilon == x ! i ! j then 1.0 else 0.0) + (max 0.0 (x ! i ! j - epsilon) + (if x ! i ! j == epsilon then 1.0 else 0.0))) (indices 28))) (indices 28))

robustAround : forallT (classifier : Vector (Vector Rat) -> Vector Rat) . forallT (epsilon : Rat) . Vector (Vector Rat) -> Index -> Rat;
robustAround classifier epsilon image label = Optimise[min] (+) (\ perturbation -> let perturbedImage = subVector--Vector-Rat--Vector-Rat--Vector-Rat image perturbation in max 0.0 ((boundedByEpsilon epsilon perturbation + validImage perturbedImage) * advises classifier perturbedImage label))

@property;
robust : forallT (n : Nat) . forallT (classifier : Vector (Vector Rat) -> Vector Rat) . forallT (epsilon : Rat) . forallT (trainingImages : Vector (Vector (Vector Rat))) . forallT (trainingLabels : Vector (Index)) . Vector Rat;
robust n classifier epsilon trainingImages trainingLabels = map (\ i -> robustAround classifier epsilon (trainingImages ! i) (trainingLabels ! i)) (indices n)
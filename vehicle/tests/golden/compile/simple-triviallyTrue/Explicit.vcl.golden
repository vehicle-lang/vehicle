<<<<<<< HEAD
type Tensor A ds = fold (\ d -> \ t -> Vector t d) A ds

=======
vectorToVector : Vector (Vector Bool) -> Vector (Vector Bool);
vectorToVector xs = xs

type Tensor A ds = fold (\ d -> \ t -> Vector t) A ds

vectorToList : Vector Nat -> List Nat;
vectorToList = (\ {A} -> \ {B} -> \ f -> dfold f) (\ x -> \ xs -> x :: xs) nil

>>>>>>> size-irrelevancy
@property;
p : forallT (f : Vector Rat -> Vector Rat) . Bool;
p f = (forall x . f x ! 0 > 0.0) or True

@property;
multiProperty : Tensor Bool (2 :: 3 :: nil);
multiProperty = [[True, True, True], [False, True, False]]
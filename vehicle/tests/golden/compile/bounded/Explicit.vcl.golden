vectorToVector : Vector Rat 1 -> Vector Rat 1;
vectorToVector xs = xs

type Tensor A ds = fold (\ d -> \ t -> Vector t d) A ds

vectorToList : Vector Nat 1 -> List Nat;
vectorToList = (\ {A} -> \ {B} -> \ f -> dfold (\ {m} -> f)) (\ x -> \ xs -> x :: xs) nil

@property;
bounded : forallT (f : Tensor Rat (1 :: nil) -> Tensor Rat (1 :: nil)) . Bool;
bounded f = forall x . 0.0 < x and x < 1.0 => 0.0 < f [x] ! 0 and f [x] ! 0 < 1.0
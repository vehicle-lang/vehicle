@property;
bounded : (Tensor Rat -> Tensor Rat) -> Tensor Rat;
bounded f = const 1.0 (1 :: nil) / search (\ xs -> reduceMul xs) 0.0 0.0 (\ x -> const 1.0 (1 :: nil) / (const 1.0 (1 :: nil) / (max (const 0.0 (1 :: nil)) (const 0.0 (1 :: nil) - x) + max (const 0.0 (1 :: nil)) (x - const 1.0 (1 :: nil))) * (max (const 0.0 (1 :: nil)) (const 0.0 (1 :: nil) - f (stack Rat nil x) ! 0) + max (const 0.0 (1 :: nil)) (f (stack Rat nil x) ! 0 - const 1.0 (1 :: nil)))))
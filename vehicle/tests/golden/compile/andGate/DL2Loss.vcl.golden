@property;
andGateCorrect : (Tensor Rat -> Tensor Rat) -> Tensor Rat;
andGateCorrect andGate = const 1.0 (1 :: nil) / search (\ xs -> reduceMul xs) 0.0 0.0 (\ x1 -> const 1.0 (1 :: nil) / (const 1.0 (1 :: nil) / search (\ xs -> reduceMul xs) 0.0 0.0 (\ x2 -> const 1.0 (1 :: nil) / (const 1.0 (1 :: nil) / (max (const 0.0 (1 :: nil)) (const 0.0 (1 :: nil) - x1) + max (const 0.0 (1 :: nil)) (x1 - const 1.0 (1 :: nil)) + (max (const 0.0 (1 :: nil)) (const 0.0 (1 :: nil) - x2) + max (const 0.0 (1 :: nil)) (x2 - const 1.0 (1 :: nil)))) * (const 1.0 (1 :: nil) / (max (const 0.0 (1 :: nil)) (const 0.5 (1 :: nil) - x1) + max (const 0.0 (1 :: nil)) (const 0.5 (1 :: nil) - x2)) * max (const 0.0 (1 :: nil)) (const 0.5 (1 :: nil) - andGate (stack Rat nil x1 x2) ! 0) + (const 1.0 (1 :: nil) / (max (const 0.0 (1 :: nil)) (const 0.5 (1 :: nil) - x1) + max (const 0.0 (1 :: nil)) (x2 - const 0.5 (1 :: nil))) * max (const 0.0 (1 :: nil)) (andGate (stack Rat nil x1 x2) ! 0 - const 0.5 (1 :: nil)) + (const 1.0 (1 :: nil) / (max (const 0.0 (1 :: nil)) (x1 - const 0.5 (1 :: nil)) + max (const 0.0 (1 :: nil)) (const 0.5 (1 :: nil) - x2)) * max (const 0.0 (1 :: nil)) (andGate (stack Rat nil x1 x2) ! 0 - const 0.5 (1 :: nil)) + const 1.0 (1 :: nil) / (max (const 0.0 (1 :: nil)) (x1 - const 0.5 (1 :: nil)) + max (const 0.0 (1 :: nil)) (x2 - const 0.5 (1 :: nil))) * max (const 0.0 (1 :: nil)) (andGate (stack Rat nil x1 x2) ! 0 - const 0.5 (1 :: nil)))))))))
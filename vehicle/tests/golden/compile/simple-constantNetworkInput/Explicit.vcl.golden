bigAnd : (\ A -> Vector A) Bool -> Bool;
bigAnd = (\ {A} -> \ {B} -> \ f -> dfold f) (\ x -> \ y -> x and y) True

vectorToVector : Vector Rat -> Vector Rat;
vectorToVector xs = xs

@noinline;
equalsVector : Vector Rat -> Vector Rat -> Bool;
equalsVector xs ys = bigAnd (zipWith (\ x -> \ y -> x == y) xs ys)

@property;
p : forallT (f : Vector Rat -> Vector Rat) . Bool;
p f = equalsVector (f [0.0]) [0.0]
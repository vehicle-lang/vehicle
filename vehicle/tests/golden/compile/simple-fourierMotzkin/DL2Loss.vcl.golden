@property;
unusedVar : (Tensor Rat -> Tensor Rat) -> Tensor Rat;
unusedVar f = maximise (*) (\ x -> maximise (*) (\ (y : Tensor Rat) -> max (const[ 0.0 ] nil) (const[ 0.0 ] nil - f [x] ! 0)))

@property;
underConstrainedVar1 : (Tensor Rat -> Tensor Rat) -> Tensor Rat;
underConstrainedVar1 f = maximise (*) (\ x -> maximise (*) (\ y -> max (const[ 0.0 ] nil) (const[ 1.0 ] nil - x) + (max (const[ 0.0 ] nil) (const[ 2.0 ] nil - y) + max (const[ 0.0 ] nil) (const[ 0.0 ] nil - f [x + y] ! 0))))

@property;
underConstrainedVar2 : (Tensor Rat -> Tensor Rat) -> Tensor Rat;
underConstrainedVar2 f = maximise (*) (\ x -> maximise (*) (\ y -> max (const[ 0.0 ] nil) (const[ 1.0 ] nil - x) + (max (const[ 0.0 ] nil) (const[ 2.0 ] nil - const[ 2.0 ] nil * y) + max (const[ 0.0 ] nil) (const[ 0.0 ] nil - f [const[ 2.0 ] nil * x + y] ! 0))))

@property;
underConstrainedVars : (Tensor Rat -> Tensor Rat) -> Tensor Rat;
underConstrainedVars f = maximise (*) (\ (x : Tensor Rat) -> max (const[ 0.0 ] nil) (const[ 2.0 ] nil - x ! 3) + (max (const[ 0.0 ] nil) (const[ 1.0 ] nil - (x ! 2 + x ! 3)) + (max (const[ 0.0 ] nil) (const[ 2.5 ] nil - (x ! 1 - const[ 2.0 ] nil * x ! 3)) + max (const[ 0.0 ] nil) (const[ 2.0 ] nil - f [x ! 0 + x ! 1] ! 0))))
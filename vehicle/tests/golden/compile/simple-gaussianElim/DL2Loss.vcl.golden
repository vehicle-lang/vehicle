@property;
test1 : (Tensor Rat -> Tensor Rat) -> Tensor Rat;
test1 f = search (\ xs -> reduceMul xs) 0.0 0.0 (\ a -> max (const 0.0 (1 :: nil)) (const 0.0 (1 :: nil) - a) + reduceAdd (- (max (const 0.0 (1 :: nil)) (f (stack Rat nil (a + const 2.0 (1 :: nil))) - const 0.0 (1 :: nil)) + max (const 0.0 (1 :: nil)) (const 0.0 (1 :: nil) - f (stack Rat nil (a + const 2.0 (1 :: nil)))))))

@property;
test2 : (Tensor Rat -> Tensor Rat) -> Tensor Rat;
test2 g = search (\ xs -> reduceMul xs) 0.0 0.0 (\ a -> search (\ xs -> reduceMul xs) 0.0 0.0 (\ b -> max (const 0.0 (1 :: nil)) (const 1.0 (1 :: nil) - a) + (max (const 0.0 (1 :: nil)) (a - b) + reduceAdd (- (max (const 0.0 (1 :: nil)) (g (stack Rat nil (a + b) (a + const 2.0 (1 :: nil) * b)) - const 0.0 (1 :: nil)) + max (const 0.0 (1 :: nil)) (const 0.0 (1 :: nil) - g (stack Rat nil (a + b) (a + const 2.0 (1 :: nil) * b))))))))
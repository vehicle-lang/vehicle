-- WARNING: This file was generated automatically by Vehicle
-- and should not be modified manually!
-- Metadata
--  - Agda version: 2.6.2
--  - AISEC version: 0.1.0
--  - Time generated: ???

{-# OPTIONS --allow-exec #-}

open import Vehicle
open import Vehicle.Utils
open import Vehicle.Data.Tensor
open import Data.Integer as ℤ using (ℤ)
open import Data.Rational as ℚ using (ℚ)
open import Data.List.Base
open import Data.Vec.Functional renaming ([] to []ᵥ; _∷_ to _∷ᵥ_)

module simple-tensor where

postulate f : Tensor ℚ (2 ∷ (2 ∷ [])) → Tensor ℚ (2 ∷ (2 ∷ []))

zeroD : Tensor ℚ []
zeroD = ℤ.+ 5 ℚ./ 2

oneD : Tensor ℚ (2 ∷ [])
oneD = zeroD ∷ᵥ (ℤ.+ 1 ℚ./ 1 ∷ᵥ []ᵥ)

twoD : Tensor ℚ (2 ∷ (2 ∷ []))
twoD = oneD ∷ᵥ ((ℤ.+ 2 ℚ./ 1 ∷ᵥ (ℤ.+ 3 ℚ./ 1 ∷ᵥ []ᵥ)) ∷ᵥ []ᵥ)

addition : Tensor ℚ (2 ∷ (2 ∷ []))
addition = twoD ⊕ twoD

subtraction : Tensor ℚ (2 ∷ (2 ∷ []))
subtraction = twoD ⊖ twoD

abstract
  p : ∀ i → ∀ j → f subtraction ⊕ addition i j ℚ.≥ ℤ.+ 0 ℚ./ 1
  p = checkSpecification record
    { proofCache   = "proofcache.vclp"
    }
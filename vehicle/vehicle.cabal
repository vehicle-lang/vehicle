cabal-version:      3.4
name:               vehicle
version:            0.9.0
description:
  Please see the README on GitHub at <https://github.com/vehicle-lang/vehicle#readme>

homepage:           https://github.com/vehicle-lang/vehicle#readme
bug-reports:        https://github.com/vehicle-lang/vehicle/issues
author:             Matthew Daggitt and Wen Kokke
maintainer:         wenkokke@users.noreply.github.com
copyright:          Â© Matthew Daggitt and Wen Kokke
license:            BSD-3-Clause
license-file:       LICENSE
build-type:         Simple
tested-with:        GHC ==8.10.7 || ==9.0.2 || ==9.2.4 || ==9.4.2
extra-source-files: lib/std.vcl

source-repository head
  type:     git
  location: https://github.com/vehicle-lang/vehicle

flag ghc-debug
  description: Add ghc-debug instrumentation
  manual:      True
  default:     False

flag nothunks
  description: Add NoThunks instrumentation
  manual:      True
  default:     False

flag release-build
  description: Marks this as an official release build
  manual:      True
  default:     False

flag optimise-heavily
  default:     False
  description: Enable some expensive optimisations when compiling Vehicle.

common common-language
  default-language:   Haskell2010
  default-extensions:
    ConstraintKinds
    DataKinds
    DeriveFoldable
    DeriveFunctor
    DeriveGeneric
    DeriveTraversable
    DuplicateRecordFields
    FlexibleContexts
    FlexibleInstances
    FunctionalDependencies
    GADTs
    ImportQualifiedPost
    InstanceSigs
    KindSignatures
    LambdaCase
    LiberalTypeSynonyms
    MultiParamTypeClasses
    OverloadedLists
    OverloadedStrings
    PatternSynonyms
    PolyKinds
    RankNTypes
    RecordWildCards
    ScopedTypeVariables
    TupleSections
    TypeApplications
    TypeFamilies
    TypeOperators
    UndecidableInstances
    ViewPatterns

  ghc-options:        -Werror -Wall -fprint-potential-instances

common common-library
  import: common-language

  if flag(ghc-debug)
    build-depends: ghc-debug-stub >=0.3 && <0.5
    cpp-options:   -DghcDebug

  if flag(nothunks)
    build-depends: nothunks >=0.1.3 && <0.2
    cpp-options:   -Dnothunks

  if flag(release-build)
    cpp-options: -DreleaseBuild

  if flag(optimise-heavily)
    cpp-options: -DoptimiseHeavily
    ghc-options: -fexpose-all-unfoldings -fspecialise-aggressively

common common-executable
  import:      common-language
  ghc-options: -threaded

  if flag(ghc-debug)
    ghc-options: -rtsopts -with-rtsopts=-N

common common-test
  import:      common-language
  ghc-options: -threaded -with-rtsopts=-N

  -- The tests should not be buildable with +release-build. The golden tests
  -- often include the version number, so running --accept with +release-build
  -- breaks all tests. Setting buildable to false prevents this.
  if flag(release-build)
    buildable: False

library
  import:          common-library
  hs-source-dirs:  src
  exposed-modules:
    Vehicle
    Vehicle.Backend.Agda
    Vehicle.Backend.LossFunction
    Vehicle.Backend.Prelude
    Vehicle.CommandLine
    Vehicle.Compile
    Vehicle.Compile.Descope
    Vehicle.Compile.Error
    Vehicle.Compile.Error.Message
    Vehicle.Compile.ExpandResources
    Vehicle.Compile.ExpandResources.Core
    Vehicle.Compile.ExpandResources.Dataset
    Vehicle.Compile.ExpandResources.Network
    Vehicle.Compile.ExpandResources.Parameter
    Vehicle.Compile.Monomorphisation
    Vehicle.Compile.Normalise.NBE
    Vehicle.Compile.Normalise.Quote
    Vehicle.Compile.Prelude
    Vehicle.Compile.Print
    Vehicle.Compile.Queries.FourierMotzkinElimination
    Vehicle.Compile.Queries.GaussianElimination
    Vehicle.Compile.Queries.IfElimination
    Vehicle.Compile.Queries.LinearExpr
    Vehicle.Compile.Queries.LinearityAndPolarityErrors
    Vehicle.Compile.Queries.NetworkElimination
    Vehicle.Compile.Queries.QuerySetStructure
    Vehicle.Compile.Queries.UserVariableElimination
    Vehicle.Compile.Queries.Variable
    Vehicle.Compile.Queries.VariableReconstruction
    Vehicle.Compile.Resource
    Vehicle.Compile.Scope
    Vehicle.Compile.Simplify
    Vehicle.Compile.Type
    Vehicle.Compile.Type.Subsystem.Standard
    Vehicle.Compile.Type.Subsystem.Standard.Interface
    Vehicle.Compile.Type.Subsystem.Standard.Patterns
    Vehicle.Export
    Vehicle.Expr.Boolean
    Vehicle.Expr.DeBruijn
    Vehicle.Expr.DSL
    Vehicle.Expr.Hashing
    Vehicle.Expr.Normalised
    Vehicle.Libraries
    Vehicle.Libraries.StandardLibrary
    Vehicle.Prelude
    Vehicle.Resource
    Vehicle.TypeCheck
    Vehicle.Validate
    Vehicle.Verify
    Vehicle.Verify.Core
    Vehicle.Verify.QueryFormat.Marabou
    Vehicle.Verify.QueryFormat.VNNLib
    Vehicle.Verify.Specification
    Vehicle.Verify.Specification.IO
    Vehicle.Verify.Specification.Status

  other-modules:
    Paths_vehicle
    Vehicle.Backend.Agda.Compile
    Vehicle.Backend.Agda.Interact
    Vehicle.Backend.JSON
    Vehicle.Backend.LossFunction.Compile
    Vehicle.Backend.LossFunction.Logics
    Vehicle.Backend.LossFunction.TypeSystem
    Vehicle.Backend.LossFunction.TypeSystem.Core
    Vehicle.Backend.LossFunction.TypeSystem.InstanceBuiltins
    Vehicle.Backend.LossFunction.TypeSystem.InstanceDefaults
    Vehicle.Backend.LossFunction.TypeSystem.Type
    Vehicle.Compile.Arity
    Vehicle.Compile.CapitaliseTypeNames
    Vehicle.Compile.Dependency
    Vehicle.Compile.EtaConversion
    Vehicle.Compile.ExpandResources.Dataset.IDX
    Vehicle.Compile.FunctionaliseResources
    Vehicle.Compile.Normalise.Builtin
    Vehicle.Compile.Normalise.Monad
    Vehicle.Compile.ObjectFile
    Vehicle.Compile.Prelude.Contexts
    Vehicle.Compile.Prelude.MonadContext
    Vehicle.Compile.Prelude.Utils
    Vehicle.Compile.Queries
    Vehicle.Compile.Type.Bidirectional
    Vehicle.Compile.Type.Constraint.Core
    Vehicle.Compile.Type.Constraint.IndexSolver
    Vehicle.Compile.Type.Constraint.InstanceDefaultSolver
    Vehicle.Compile.Type.Constraint.InstanceSolver
    Vehicle.Compile.Type.Constraint.UnificationSolver
    Vehicle.Compile.Type.Core
    Vehicle.Compile.Type.Force
    Vehicle.Compile.Type.Generalise
    Vehicle.Compile.Type.Irrelevance
    Vehicle.Compile.Type.Meta
    Vehicle.Compile.Type.Meta.Map
    Vehicle.Compile.Type.Meta.Set
    Vehicle.Compile.Type.Meta.Substitution
    Vehicle.Compile.Type.Meta.Variable
    Vehicle.Compile.Type.Monad
    Vehicle.Compile.Type.Monad.Class
    Vehicle.Compile.Type.Monad.Instance
    Vehicle.Compile.Type.Subsystem
    Vehicle.Compile.Type.Subsystem.InputOutputInsertion
    Vehicle.Compile.Type.Subsystem.Linearity
    Vehicle.Compile.Type.Subsystem.Linearity.AnnotationRestrictions
    Vehicle.Compile.Type.Subsystem.Linearity.Core
    Vehicle.Compile.Type.Subsystem.Linearity.LinearitySolver
    Vehicle.Compile.Type.Subsystem.Linearity.Type
    Vehicle.Compile.Type.Subsystem.Polarity
    Vehicle.Compile.Type.Subsystem.Polarity.AnnotationRestrictions
    Vehicle.Compile.Type.Subsystem.Polarity.Core
    Vehicle.Compile.Type.Subsystem.Polarity.PolaritySolver
    Vehicle.Compile.Type.Subsystem.Polarity.Type
    Vehicle.Compile.Type.Subsystem.Standard.AnnotationRestrictions
    Vehicle.Compile.Type.Subsystem.Standard.Constraint.InstanceBuiltins
    Vehicle.Compile.Type.Subsystem.Standard.Constraint.InstanceDefaults
    Vehicle.Compile.Type.Subsystem.Standard.Core
    Vehicle.Compile.Type.Subsystem.Standard.Type
    Vehicle.Compile.Warning
    Vehicle.Debug
    Vehicle.Expr.Relevant
    Vehicle.Prelude.IO
    Vehicle.Prelude.Logging
    Vehicle.Prelude.Logging.Backend
    Vehicle.Prelude.Logging.Class
    Vehicle.Prelude.Logging.Instance
    Vehicle.Prelude.Misc
    Vehicle.Prelude.Prettyprinter
    Vehicle.Prelude.Supply
    Vehicle.Prelude.Version
    Vehicle.Verify.Verifier
    Vehicle.Verify.Verifier.Marabou

  autogen-modules: Paths_vehicle
  build-depends:
    , aeson                  >=2.1.1    && <2.2
    , aeson-pretty           >=0.8.9    && <0.9
    , ansi-terminal          >=0.6      && <1
    , base                   >=4.13     && <5
    , bytestring             >=0.10.12  && <0.12
    , cereal                 >=0.5      && <1
    , containers             >=0.5      && <1
    , data-default           >=0.7      && <1
    , data-default-class     >=0.1.2    && <0.2
    , data-fix               >=0.2      && <1
    , deepseq                >=1.4      && <2
    , directory              >=1.3.6    && <1.4
    , file-embed             >=0.0.15.0 && <0.1
    , filepath               >=1.4      && <2
    , gitrev                 >=1.3      && <2
    , hashable               >=1.3      && <2
    , linkedhashmap          >=0.4      && <1
    , mnist-idx              >=0.1.3.1  && <0.2
    , mtl                    >=2.2      && <3
    , optparse-applicative   >=0.16     && <1
    , prettyprinter          >=1.7      && <2
    , process                >=1.6.13   && <1.7
    , split                  >=0.2.3    && <0.3
    , sscript                >=0.1.0.2  && <1
    , temporary              >=1.3      && <1.4
    , terminal-progress-bar  >=0.4.1    && <1
    , text                   >=1.2      && <3
    , transformers           >=0.4      && <0.7
    , unordered-containers   >=0.2.19   && <0.3
    , vector                 >=0.12.3   && <0.14
    , vehicle-syntax

executable vehicle
  import:         common-library
  main-is:        Main.hs
  hs-source-dirs: app
  build-depends:
    , base                  >=4.13 && <5
    , optparse-applicative  >=0.16 && <1
    , vehicle

-----------------
-- Test suites --
-----------------

test-suite unit-tests
  import:        common-test
  type:          exitcode-stdio-1.0
  main-is:       tests/Unit.hs
  build-depends:
    , base                       >=4.13 && <5
    , tasty
    , vehicle:unit-tests-common

library unit-tests-common
  import:          common-library
  hs-source-dirs:  tests/unit
  exposed-modules:
    Vehicle.Test.Unit.Common
    Vehicle.Test.Unit.Compile.CommandLine
    Vehicle.Test.Unit.Compile.DeBruijn
    Vehicle.Test.Unit.Compile.Normalisation

  build-depends:
    , base
    , containers
    , hashable
    , mtl
    , optparse-applicative
    , tagged
    , tasty
    , tasty-hunit
    , text
    , vehicle
    , vehicle-syntax

test-suite golden-tests
  import:             common-test
  type:               exitcode-stdio-1.0
  main-is:            tests/Golden.hs
  build-depends:
    , base
    , filepath
    , optparse-applicative
    , tagged
    , tasty
    , tasty-golden-executable

  build-tool-depends: vehicle:vehicle

executable new-golden-test
  import:        common-executable
  main-is:       app/NewTest.hs
  build-depends:
    , base
    , containers
    , directory
    , filepath
    , optparse-applicative
    , tagged
    , tasty
    , tasty-golden-executable
    , text
    , vehicle

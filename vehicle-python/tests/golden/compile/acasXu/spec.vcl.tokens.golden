Token.Comment	'--------------------------------------------------------------------------------\n'
Token.Comment	'-- Full specification of the ACAS XU networks\n'
Token.Space	'\n'
Token.Comment	'-- Taken from Appendix VI of "Reluplex: An Efficient SMT Solver for Verifying\n'
Token.Comment	'-- Deep Neural Networks" at https://arxiv.org/pdf/1702.01135.pdf\n'
Token.Space	'\n'
Token.Comment	'-- Comments describing the properties are taken directly from the text.\n'
Token.Space	'\n'
Token.Comment	'--------------------------------------------------------------------------------\n'
Token.Comment	'-- Utilities\n'
Token.Space	'\n'
Token.Comment	'-- The value of the constant `pi`.\n'
Token.Name	'pi'
Token.Space	' '
Token.Punctuation	'='
Token.Space	' '
Token.Literal.Number.Integer	'3'
Token.Punctuation	'.'
Token.Literal.Number.Integer	'141592'
Token.Space	'\n\n'
Token.Comment	'--------------------------------------------------------------------------------\n'
Token.Comment	'-- Inputs\n'
Token.Space	'\n'
Token.Comment	'-- We first define a new name for the type of inputs of the network.\n'
Token.Comment	'-- In particular, it takes inputs of the form of a vector of 5 rational numbers.\n'
Token.Space	'\n'
Token.Keyword	'type'
Token.Space	' '
Token.Name	'InputVector'
Token.Space	' '
Token.Punctuation	'='
Token.Space	' '
Token.Keyword.Type	'Vector'
Token.Space	' '
Token.Keyword.Type	'Rat'
Token.Space	' '
Token.Literal.Number.Integer	'5'
Token.Space	'\n\n'
Token.Comment	'-- Next we add meaningful names for the indices.\n'
Token.Comment	'-- The fact that all vector types come annotated with their size means that it\n'
Token.Comment	'-- is impossible to mess up indexing into vectors, e.g. if you changed\n'
Token.Comment	'-- `distanceToIntruder = 0` to `distanceToIntruder = 5` the specification would\n'
Token.Comment	'-- fail to type-check.\n'
Token.Space	'\n'
Token.Name	'distanceToIntruder'
Token.Space	' '
Token.Punctuation	'='
Token.Space	' '
Token.Literal.Number.Integer	'0'
Token.Space	'   '
Token.Comment	'-- measured in metres\n'
Token.Name	'angleToIntruder'
Token.Space	'    '
Token.Punctuation	'='
Token.Space	' '
Token.Literal.Number.Integer	'1'
Token.Space	'   '
Token.Comment	'-- measured in radians\n'
Token.Name	'intruderHeading'
Token.Space	'    '
Token.Punctuation	'='
Token.Space	' '
Token.Literal.Number.Integer	'2'
Token.Space	'   '
Token.Comment	'-- measured in radians\n'
Token.Name	'speed'
Token.Space	'              '
Token.Punctuation	'='
Token.Space	' '
Token.Literal.Number.Integer	'3'
Token.Space	'   '
Token.Comment	'-- measured in metres/second\n'
Token.Name	'intruderSpeed'
Token.Space	'      '
Token.Punctuation	'='
Token.Space	' '
Token.Literal.Number.Integer	'4'
Token.Space	'   '
Token.Comment	'-- measured in meters/second\n'
Token.Space	'\n'
Token.Comment	'--------------------------------------------------------------------------------\n'
Token.Comment	'-- Outputs\n'
Token.Space	'\n'
Token.Comment	'-- Outputs are also a vector of 5 rationals. Each one representing the score\n'
Token.Comment	'-- for the 5 available courses of action.\n'
Token.Space	'\n'
Token.Keyword	'type'
Token.Space	' '
Token.Name	'OutputVector'
Token.Space	' '
Token.Punctuation	'='
Token.Space	' '
Token.Keyword.Type	'Vector'
Token.Space	' '
Token.Keyword.Type	'Rat'
Token.Space	' '
Token.Literal.Number.Integer	'5'
Token.Space	'\n\n'
Token.Comment	'-- Again we define meaningful names for the indices into output vectors.\n'
Token.Space	'\n'
Token.Name	'clearOfConflict'
Token.Space	' '
Token.Punctuation	'='
Token.Space	' '
Token.Literal.Number.Integer	'0'
Token.Space	'\n'
Token.Name	'weakLeft'
Token.Space	'        '
Token.Punctuation	'='
Token.Space	' '
Token.Literal.Number.Integer	'1'
Token.Space	'\n'
Token.Name	'weakRight'
Token.Space	'       '
Token.Punctuation	'='
Token.Space	' '
Token.Literal.Number.Integer	'2'
Token.Space	'\n'
Token.Name	'strongLeft'
Token.Space	'      '
Token.Punctuation	'='
Token.Space	' '
Token.Literal.Number.Integer	'3'
Token.Space	'\n'
Token.Name	'strongRight'
Token.Space	'     '
Token.Punctuation	'='
Token.Space	' '
Token.Literal.Number.Integer	'4'
Token.Space	'\n\n'
Token.Comment	'--------------------------------------------------------------------------------\n'
Token.Comment	'-- The network\n'
Token.Space	'\n'
Token.Comment	'-- Next we use the `network` annotation to declare the name and the type of the\n'
Token.Comment	'-- neural network we are verifying. The implementation is passed to the compiler\n'
Token.Comment	'-- via a reference to the ONNX file at compile time.\n'
Token.Space	'\n'
Token.Keyword.Declaration	'@network'
Token.Space	'\n'
Token.Name	'acasXu'
Token.Space	' '
Token.Punctuation	':'
Token.Space	' '
Token.Name	'InputVector'
Token.Space	' '
Token.Operator	'->'
Token.Space	' '
Token.Name	'OutputVector'
Token.Space	'\n\n'
Token.Comment	'--------------------------------------------------------------------------------\n'
Token.Comment	'-- Normalisation\n'
Token.Space	'\n'
Token.Comment	'-- As is common in machine learning, the network operates over\n'
Token.Comment	'-- normalised values, rather than values in the problem space\n'
Token.Comment	'-- (e.g. using standard units like m/s).\n'
Token.Comment	'-- This is an issue for us, as we would like to write our specification in\n'
Token.Comment	'-- terms of the problem space values .\n'
Token.Comment	'-- Therefore before applying the network, we first have to normalise\n'
Token.Comment	'-- the values in the problem space.\n'
Token.Space	'\n'
Token.Comment	'-- For clarity, we therefore define a new type synonym\n'
Token.Comment	'-- for unnormalised input vectors which are in the problem space.\n'
Token.Keyword	'type'
Token.Space	' '
Token.Name	'UnnormalisedInputVector'
Token.Space	' '
Token.Punctuation	'='
Token.Space	' '
Token.Keyword.Type	'Vector'
Token.Space	' '
Token.Keyword.Type	'Rat'
Token.Space	' '
Token.Literal.Number.Integer	'5'
Token.Space	'\n\n'
Token.Comment	'-- Next we define the minimum and maximum values that each input can take.\n'
Token.Comment	'-- These correspond to the range of the inputs that the network is designed\n'
Token.Comment	'-- to work over.\n'
Token.Name	'minimumInputValues'
Token.Space	' '
Token.Punctuation	':'
Token.Space	' '
Token.Name	'UnnormalisedInputVector'
Token.Space	'\n'
Token.Name	'minimumInputValues'
Token.Space	' '
Token.Punctuation	'='
Token.Space	' '
Token.Operator	'['
Token.Literal.Number.Integer	'0'
Token.Punctuation	','
Token.Literal.Number.Integer	'0'
Token.Punctuation	','
Token.Literal.Number.Integer	'0'
Token.Punctuation	','
Token.Literal.Number.Integer	'0'
Token.Punctuation	','
Token.Literal.Number.Integer	'0'
Token.Operator	']'
Token.Space	'\n\n'
Token.Name	'maximumInputValues'
Token.Space	' '
Token.Punctuation	':'
Token.Space	' '
Token.Name	'UnnormalisedInputVector'
Token.Space	'\n'
Token.Name	'maximumInputValues'
Token.Space	' '
Token.Punctuation	'='
Token.Space	' '
Token.Operator	'['
Token.Literal.Number.Integer	'60261'
Token.Punctuation	'.'
Token.Literal.Number.Integer	'0'
Token.Punctuation	','
Token.Space	' '
Token.Literal.Number.Integer	'2'
Token.Operator	'*'
Token.Name	'pi'
Token.Punctuation	','
Token.Space	' '
Token.Literal.Number.Integer	'2'
Token.Operator	'*'
Token.Name	'pi'
Token.Punctuation	','
Token.Space	' '
Token.Literal.Number.Integer	'1100'
Token.Punctuation	'.'
Token.Literal.Number.Integer	'0'
Token.Punctuation	','
Token.Space	' '
Token.Literal.Number.Integer	'1200'
Token.Punctuation	'.'
Token.Literal.Number.Integer	'0'
Token.Operator	']'
Token.Space	'\n\n'
Token.Comment	'-- We can therefore define a simple predicate saying whether a given input\n'
Token.Comment	'-- vector is in the right range.\n'
Token.Name	'validInput'
Token.Space	' '
Token.Punctuation	':'
Token.Space	' '
Token.Name	'UnnormalisedInputVector'
Token.Space	' '
Token.Operator	'->'
Token.Space	' '
Token.Keyword.Type	'Bool'
Token.Space	'\n'
Token.Name	'validInput'
Token.Space	' '
Token.Name	'x'
Token.Space	' '
Token.Punctuation	'='
Token.Space	' '
Token.Keyword	'forall'
Token.Space	' '
Token.Name	'i'
Token.Space	' '
Token.Punctuation	'.'
Token.Space	' '
Token.Name	'minimumInputValues'
Token.Space	' '
Token.Operator	'!'
Token.Space	' '
Token.Name	'i'
Token.Space	' '
Token.Operator	'<='
Token.Space	' '
Token.Name	'x'
Token.Space	' '
Token.Operator	'!'
Token.Space	' '
Token.Name	'i'
Token.Space	' '
Token.Operator	'<='
Token.Space	' '
Token.Name	'maximumInputValues'
Token.Space	' '
Token.Operator	'!'
Token.Space	' '
Token.Name	'i'
Token.Space	'\n\n'
Token.Comment	'-- Then the mean values that will be used to scale the inputs.\n'
Token.Name	'meanScalingValues'
Token.Space	' '
Token.Punctuation	':'
Token.Space	' '
Token.Name	'UnnormalisedInputVector'
Token.Space	'\n'
Token.Name	'meanScalingValues'
Token.Space	' '
Token.Punctuation	'='
Token.Space	' '
Token.Operator	'['
Token.Literal.Number.Integer	'19791'
Token.Punctuation	'.'
Token.Literal.Number.Integer	'091'
Token.Punctuation	','
Token.Space	' '
Token.Literal.Number.Integer	'0'
Token.Punctuation	'.'
Token.Literal.Number.Integer	'0'
Token.Punctuation	','
Token.Space	' '
Token.Literal.Number.Integer	'0'
Token.Punctuation	'.'
Token.Literal.Number.Integer	'0'
Token.Punctuation	','
Token.Space	' '
Token.Literal.Number.Integer	'650'
Token.Punctuation	'.'
Token.Literal.Number.Integer	'0'
Token.Punctuation	','
Token.Space	' '
Token.Literal.Number.Integer	'600'
Token.Punctuation	'.'
Token.Literal.Number.Integer	'0'
Token.Operator	']'
Token.Space	'\n\n'
Token.Comment	'-- We can now define the normalisation function that takes an input vector and\n'
Token.Comment	'-- returns the unnormalised version.\n'
Token.Name	'normalise'
Token.Space	' '
Token.Punctuation	':'
Token.Space	' '
Token.Name	'UnnormalisedInputVector'
Token.Space	' '
Token.Operator	'->'
Token.Space	' '
Token.Name	'InputVector'
Token.Space	'\n'
Token.Name	'normalise'
Token.Space	' '
Token.Name	'x'
Token.Space	' '
Token.Punctuation	'='
Token.Space	' '
Token.Keyword	'foreach'
Token.Space	' '
Token.Name	'i'
Token.Space	' '
Token.Punctuation	'.'
Token.Space	'\n  '
Token.Punctuation	'('
Token.Name	'x'
Token.Space	' '
Token.Operator	'!'
Token.Space	' '
Token.Name	'i'
Token.Space	' '
Token.Operator	'-'
Token.Space	' '
Token.Name	'meanScalingValues'
Token.Space	' '
Token.Operator	'!'
Token.Space	' '
Token.Name	'i'
Token.Punctuation	')'
Token.Space	' '
Token.Operator	'/'
Token.Space	' '
Token.Punctuation	'('
Token.Name	'maximumInputValues'
Token.Space	' '
Token.Operator	'!'
Token.Space	' '
Token.Name	'i'
Token.Punctuation	')'
Token.Space	'\n\n'
Token.Comment	'-- Using this we can define a new function that first normalises the input\n'
Token.Comment	'-- vector and then applies the neural network.\n'
Token.Name	'normAcasXu'
Token.Space	' '
Token.Punctuation	':'
Token.Space	' '
Token.Name	'UnnormalisedInputVector'
Token.Space	' '
Token.Operator	'->'
Token.Space	' '
Token.Name	'OutputVector'
Token.Space	'\n'
Token.Name	'normAcasXu'
Token.Space	' '
Token.Name	'x'
Token.Space	' '
Token.Punctuation	'='
Token.Space	' '
Token.Name	'acasXu'
Token.Space	' '
Token.Punctuation	'('
Token.Name	'normalise'
Token.Space	' '
Token.Name	'x'
Token.Punctuation	')'
Token.Space	'\n\n'
Token.Comment	'-- A constraint that says the network chooses output `i` when given the\n'
Token.Comment	'-- input `x`. We must necessarily provide a finite index that is less than 5\n'
Token.Comment	'-- (i.e. of type Index 5). The `a ! b` operator lookups index `b` in vector `a`.\n'
Token.Name	'advises'
Token.Space	' '
Token.Punctuation	':'
Token.Space	' '
Token.Keyword.Type	'Index'
Token.Space	' '
Token.Literal.Number.Integer	'5'
Token.Space	' '
Token.Operator	'->'
Token.Space	' '
Token.Name	'UnnormalisedInputVector'
Token.Space	' '
Token.Operator	'->'
Token.Space	' '
Token.Keyword.Type	'Bool'
Token.Space	'\n'
Token.Name	'advises'
Token.Space	' '
Token.Name	'i'
Token.Space	' '
Token.Name	'x'
Token.Space	' '
Token.Punctuation	'='
Token.Space	' '
Token.Keyword	'forall'
Token.Space	' '
Token.Name	'j'
Token.Space	' '
Token.Punctuation	'.'
Token.Space	' '
Token.Name	'i'
Token.Space	' '
Token.Operator	'!='
Token.Space	' '
Token.Name	'j'
Token.Space	' '
Token.Operator	'=>'
Token.Space	' '
Token.Name	'normAcasXu'
Token.Space	' '
Token.Name	'x'
Token.Space	' '
Token.Operator	'!'
Token.Space	' '
Token.Name	'i'
Token.Space	' '
Token.Operator	'<'
Token.Space	' '
Token.Name	'normAcasXu'
Token.Space	' '
Token.Name	'x'
Token.Space	' '
Token.Operator	'!'
Token.Space	' '
Token.Name	'j'
Token.Space	'\n\n'
Token.Comment	'--------------------------------------------------------------------------------\n'
Token.Comment	'-- Property 1\n'
Token.Space	'\n'
Token.Comment	'-- If the intruder is distant and is significantly slower than the\n'
Token.Comment	'-- ownship, the score of a COC advisory will always be below a certain fixed\n'
Token.Comment	'-- threshold.\n'
Token.Space	'\n'
Token.Comment	'-- Tested on: all 45 networks.\n'
Token.Space	'\n'
Token.Name	'intruderDistantAndSlower'
Token.Space	' '
Token.Punctuation	':'
Token.Space	' '
Token.Name	'UnnormalisedInputVector'
Token.Space	' '
Token.Operator	'->'
Token.Space	' '
Token.Keyword.Type	'Bool'
Token.Space	'\n'
Token.Name	'intruderDistantAndSlower'
Token.Space	' '
Token.Name	'x'
Token.Space	' '
Token.Punctuation	'='
Token.Space	'\n  '
Token.Name	'x'
Token.Space	' '
Token.Operator	'!'
Token.Space	' '
Token.Name	'distanceToIntruder'
Token.Space	' '
Token.Operator	'>='
Token.Space	' '
Token.Literal.Number.Integer	'55947'
Token.Punctuation	'.'
Token.Literal.Number.Integer	'691'
Token.Space	' '
Token.Operator.Word	'and'
Token.Space	'\n  '
Token.Name	'x'
Token.Space	' '
Token.Operator	'!'
Token.Space	' '
Token.Name	'speed'
Token.Space	'              '
Token.Operator	'>='
Token.Space	' '
Token.Literal.Number.Integer	'1145'
Token.Space	'      '
Token.Operator.Word	'and'
Token.Space	'\n  '
Token.Name	'x'
Token.Space	' '
Token.Operator	'!'
Token.Space	' '
Token.Name	'intruderSpeed'
Token.Space	'      '
Token.Operator	'<='
Token.Space	' '
Token.Literal.Number.Integer	'60'
Token.Space	'\n\n'
Token.Keyword.Declaration	'@property'
Token.Space	'\n'
Token.Name	'property1'
Token.Space	' '
Token.Punctuation	':'
Token.Space	' '
Token.Keyword.Type	'Bool'
Token.Space	'\n'
Token.Name	'property1'
Token.Space	' '
Token.Punctuation	'='
Token.Space	' '
Token.Keyword	'forall'
Token.Space	' '
Token.Name	'x'
Token.Space	' '
Token.Punctuation	'.'
Token.Space	' '
Token.Name	'validInput'
Token.Space	' '
Token.Name	'x'
Token.Space	' '
Token.Operator.Word	'and'
Token.Space	' '
Token.Name	'intruderDistantAndSlower'
Token.Space	' '
Token.Name	'x'
Token.Space	' '
Token.Operator	'=>'
Token.Space	'\n  '
Token.Name	'normAcasXu'
Token.Space	' '
Token.Name	'x'
Token.Space	' '
Token.Operator	'!'
Token.Space	' '
Token.Name	'clearOfConflict'
Token.Space	' '
Token.Operator	'<='
Token.Space	' '
Token.Literal.Number.Integer	'1500'
Token.Space	'\n\n'
Token.Comment	'--------------------------------------------------------------------------------\n'
Token.Comment	'-- Property 2\n'
Token.Space	'\n'
Token.Comment	'-- If the intruder is distant and is significantly slower than the\n'
Token.Comment	'-- ownship, the score of a COC advisory will never be maximal.\n'
Token.Space	'\n'
Token.Comment	'-- Tested on: N_{x,y} for all x \u2265 2 and for all y\n'
Token.Space	'\n'
Token.Keyword.Declaration	'@property'
Token.Space	'\n'
Token.Name	'property2'
Token.Space	' '
Token.Punctuation	':'
Token.Space	' '
Token.Keyword.Type	'Bool'
Token.Space	'\n'
Token.Name	'property2'
Token.Space	' '
Token.Punctuation	'='
Token.Space	' '
Token.Keyword	'forall'
Token.Space	' '
Token.Name	'x'
Token.Space	' '
Token.Punctuation	'.'
Token.Space	' '
Token.Name	'validInput'
Token.Space	' '
Token.Name	'x'
Token.Space	' '
Token.Operator.Word	'and'
Token.Space	' '
Token.Name	'intruderDistantAndSlower'
Token.Space	' '
Token.Name	'x'
Token.Space	' '
Token.Operator	'=>'
Token.Space	'\n  '
Token.Punctuation	'('
Token.Keyword	'exists'
Token.Space	' '
Token.Name	'j'
Token.Space	' '
Token.Punctuation	'.'
Token.Space	' '
Token.Punctuation	'('
Token.Name	'normAcasXu'
Token.Space	' '
Token.Name	'x'
Token.Space	' '
Token.Operator	'!'
Token.Space	' '
Token.Name	'j'
Token.Punctuation	')'
Token.Space	' '
Token.Operator	'>'
Token.Space	' '
Token.Punctuation	'('
Token.Name	'normAcasXu'
Token.Space	' '
Token.Name	'x'
Token.Space	' '
Token.Operator	'!'
Token.Space	' '
Token.Name	'clearOfConflict'
Token.Punctuation	')'
Token.Punctuation	')'
Token.Space	'\n\n'
Token.Comment	'--------------------------------------------------------------------------------\n'
Token.Comment	'-- Property 3\n'
Token.Space	'\n'
Token.Comment	'-- If the intruder is directly ahead and is moving towards the\n'
Token.Comment	'-- ownship, the score for COC will not be minimal.\n'
Token.Space	'\n'
Token.Comment	'-- Tested on: all networks except N_{1,7}, N_{1,8}, and N_{1,9}.\n'
Token.Space	'\n'
Token.Name	'directlyAhead'
Token.Space	' '
Token.Punctuation	':'
Token.Space	' '
Token.Name	'UnnormalisedInputVector'
Token.Space	' '
Token.Operator	'->'
Token.Space	' '
Token.Keyword.Type	'Bool'
Token.Space	'\n'
Token.Name	'directlyAhead'
Token.Space	' '
Token.Name	'x'
Token.Space	' '
Token.Punctuation	'='
Token.Space	'\n  '
Token.Literal.Number.Integer	'1500'
Token.Space	'  '
Token.Operator	'<='
Token.Space	' '
Token.Name	'x'
Token.Space	' '
Token.Operator	'!'
Token.Space	' '
Token.Name	'distanceToIntruder'
Token.Space	' '
Token.Operator	'<='
Token.Space	' '
Token.Literal.Number.Integer	'1800'
Token.Space	' '
Token.Operator.Word	'and'
Token.Space	'\n  '
Token.Operator	'-'
Token.Literal.Number.Integer	'0'
Token.Punctuation	'.'
Token.Literal.Number.Integer	'06'
Token.Space	' '
Token.Operator	'<='
Token.Space	' '
Token.Name	'x'
Token.Space	' '
Token.Operator	'!'
Token.Space	' '
Token.Name	'angleToIntruder'
Token.Space	'    '
Token.Operator	'<='
Token.Space	' '
Token.Literal.Number.Integer	'0'
Token.Punctuation	'.'
Token.Literal.Number.Integer	'06'
Token.Space	'\n\n'
Token.Name	'movingTowards'
Token.Space	' '
Token.Punctuation	':'
Token.Space	' '
Token.Name	'UnnormalisedInputVector'
Token.Space	' '
Token.Operator	'->'
Token.Space	' '
Token.Keyword.Type	'Bool'
Token.Space	'\n'
Token.Name	'movingTowards'
Token.Space	' '
Token.Name	'x'
Token.Space	' '
Token.Punctuation	'='
Token.Space	'\n  '
Token.Name	'x'
Token.Space	' '
Token.Operator	'!'
Token.Space	' '
Token.Name	'intruderHeading'
Token.Space	' '
Token.Operator	'>='
Token.Space	' '
Token.Literal.Number.Integer	'3'
Token.Punctuation	'.'
Token.Literal.Number.Integer	'10'
Token.Space	'  '
Token.Operator.Word	'and'
Token.Space	'\n  '
Token.Name	'x'
Token.Space	' '
Token.Operator	'!'
Token.Space	' '
Token.Name	'speed'
Token.Space	'           '
Token.Operator	'>='
Token.Space	' '
Token.Literal.Number.Integer	'980'
Token.Space	'   '
Token.Operator.Word	'and'
Token.Space	'\n  '
Token.Name	'x'
Token.Space	' '
Token.Operator	'!'
Token.Space	' '
Token.Name	'intruderSpeed'
Token.Space	'   '
Token.Operator	'>='
Token.Space	' '
Token.Literal.Number.Integer	'960'
Token.Space	'\n\n'
Token.Keyword.Declaration	'@property'
Token.Space	'\n'
Token.Name	'property3'
Token.Space	' '
Token.Punctuation	':'
Token.Space	' '
Token.Keyword.Type	'Bool'
Token.Space	'\n'
Token.Name	'property3'
Token.Space	' '
Token.Punctuation	'='
Token.Space	' '
Token.Keyword	'forall'
Token.Space	' '
Token.Name	'x'
Token.Space	' '
Token.Punctuation	'.'
Token.Space	' '
Token.Name	'validInput'
Token.Space	' '
Token.Name	'x'
Token.Space	' '
Token.Operator.Word	'and'
Token.Space	' '
Token.Name	'directlyAhead'
Token.Space	' '
Token.Name	'x'
Token.Space	' '
Token.Operator.Word	'and'
Token.Space	' '
Token.Name	'movingTowards'
Token.Space	' '
Token.Name	'x'
Token.Space	' '
Token.Operator	'=>'
Token.Space	'\n  '
Token.Operator.Word	'not'
Token.Space	' '
Token.Punctuation	'('
Token.Name	'advises'
Token.Space	' '
Token.Name	'clearOfConflict'
Token.Space	' '
Token.Name	'x'
Token.Punctuation	')'
Token.Space	'\n\n'
Token.Comment	'--------------------------------------------------------------------------------\n'
Token.Comment	'-- Property 4\n'
Token.Space	'\n'
Token.Comment	'-- If the intruder is directly ahead and is moving away from the\n'
Token.Comment	'-- ownship but at a lower speed than that of the ownship, the score for COC\n'
Token.Comment	'-- will not be minimal.\n'
Token.Space	'\n'
Token.Comment	'-- Tested on: all networks except N_{1,7}, N_{1,8}, and N_{1,9}.\n'
Token.Space	'\n'
Token.Name	'movingAway'
Token.Space	' '
Token.Punctuation	':'
Token.Space	' '
Token.Name	'UnnormalisedInputVector'
Token.Space	' '
Token.Operator	'->'
Token.Space	' '
Token.Keyword.Type	'Bool'
Token.Space	'\n'
Token.Name	'movingAway'
Token.Space	' '
Token.Name	'x'
Token.Space	' '
Token.Punctuation	'='
Token.Space	'\n          '
Token.Name	'x'
Token.Space	' '
Token.Operator	'!'
Token.Space	' '
Token.Name	'intruderHeading'
Token.Space	' '
Token.Operator	'=='
Token.Space	' '
Token.Literal.Number.Integer	'0'
Token.Space	'   '
Token.Operator.Word	'and'
Token.Space	'\n  '
Token.Literal.Number.Integer	'1000'
Token.Space	' '
Token.Operator	'<='
Token.Space	' '
Token.Name	'x'
Token.Space	' '
Token.Operator	'!'
Token.Space	' '
Token.Name	'speed'
Token.Space	'                  '
Token.Operator.Word	'and'
Token.Space	'\n  '
Token.Literal.Number.Integer	'700'
Token.Space	'  '
Token.Operator	'<='
Token.Space	' '
Token.Name	'x'
Token.Space	' '
Token.Operator	'!'
Token.Space	' '
Token.Name	'intruderSpeed'
Token.Space	'   '
Token.Operator	'<='
Token.Space	' '
Token.Literal.Number.Integer	'800'
Token.Space	'\n\n'
Token.Keyword.Declaration	'@property'
Token.Space	'\n'
Token.Name	'property4'
Token.Space	' '
Token.Punctuation	':'
Token.Space	' '
Token.Keyword.Type	'Bool'
Token.Space	'\n'
Token.Name	'property4'
Token.Space	' '
Token.Punctuation	'='
Token.Space	' '
Token.Keyword	'forall'
Token.Space	' '
Token.Name	'x'
Token.Space	' '
Token.Punctuation	'.'
Token.Space	' '
Token.Name	'validInput'
Token.Space	' '
Token.Name	'x'
Token.Space	' '
Token.Operator.Word	'and'
Token.Space	' '
Token.Name	'directlyAhead'
Token.Space	' '
Token.Name	'x'
Token.Space	' '
Token.Operator.Word	'and'
Token.Space	' '
Token.Name	'movingAway'
Token.Space	' '
Token.Name	'x'
Token.Space	' '
Token.Operator	'=>'
Token.Space	'\n  '
Token.Operator.Word	'not'
Token.Space	' '
Token.Punctuation	'('
Token.Name	'advises'
Token.Space	' '
Token.Name	'clearOfConflict'
Token.Space	' '
Token.Name	'x'
Token.Punctuation	')'
Token.Space	'\n\n'
Token.Comment	'--------------------------------------------------------------------------------\n'
Token.Comment	'-- Property 5\n'
Token.Space	'\n'
Token.Comment	'-- If the intruder is near and approaching from the left, the network\n'
Token.Comment	'-- advises \u201cstrong right\u201d.\n'
Token.Space	'\n'
Token.Comment	'-- Tested on: N_{1,1}.\n'
Token.Space	'\n'
Token.Name	'nearAndApproachingFromLeft'
Token.Space	' '
Token.Punctuation	':'
Token.Space	' '
Token.Name	'UnnormalisedInputVector'
Token.Space	' '
Token.Operator	'->'
Token.Space	' '
Token.Keyword.Type	'Bool'
Token.Space	'\n'
Token.Name	'nearAndApproachingFromLeft'
Token.Space	' '
Token.Name	'x'
Token.Space	' '
Token.Punctuation	'='
Token.Space	'\n  '
Token.Literal.Number.Integer	'250'
Token.Space	' '
Token.Operator	'<='
Token.Space	' '
Token.Name	'x'
Token.Space	' '
Token.Operator	'!'
Token.Space	' '
Token.Name	'distanceToIntruder'
Token.Space	' '
Token.Operator	'<='
Token.Space	' '
Token.Literal.Number.Integer	'400'
Token.Space	'         '
Token.Operator.Word	'and'
Token.Space	'\n  '
Token.Literal.Number.Integer	'0'
Token.Punctuation	'.'
Token.Literal.Number.Integer	'2'
Token.Space	' '
Token.Operator	'<='
Token.Space	' '
Token.Name	'x'
Token.Space	' '
Token.Operator	'!'
Token.Space	' '
Token.Name	'angleToIntruder'
Token.Space	'    '
Token.Operator	'<='
Token.Space	' '
Token.Literal.Number.Integer	'0'
Token.Punctuation	'.'
Token.Literal.Number.Integer	'4'
Token.Space	'         '
Token.Operator.Word	'and'
Token.Space	'\n  '
Token.Operator	'-'
Token.Name	'pi'
Token.Space	' '
Token.Operator	'<='
Token.Space	' '
Token.Name	'x'
Token.Space	' '
Token.Operator	'!'
Token.Space	' '
Token.Name	'intruderHeading'
Token.Space	'    '
Token.Operator	'<='
Token.Space	' '
Token.Operator	'-'
Token.Name	'pi'
Token.Space	' '
Token.Operator	'+'
Token.Space	' '
Token.Literal.Number.Integer	'0'
Token.Punctuation	'.'
Token.Literal.Number.Integer	'005'
Token.Space	' '
Token.Operator.Word	'and'
Token.Space	'\n  '
Token.Literal.Number.Integer	'100'
Token.Space	' '
Token.Operator	'<='
Token.Space	' '
Token.Name	'x'
Token.Space	' '
Token.Operator	'!'
Token.Space	' '
Token.Name	'speed'
Token.Space	'              '
Token.Operator	'<='
Token.Space	' '
Token.Literal.Number.Integer	'400'
Token.Space	'         '
Token.Operator.Word	'and'
Token.Space	'\n  '
Token.Literal.Number.Integer	'0'
Token.Space	'   '
Token.Operator	'<='
Token.Space	' '
Token.Name	'x'
Token.Space	' '
Token.Operator	'!'
Token.Space	' '
Token.Name	'intruderSpeed'
Token.Space	'      '
Token.Operator	'<='
Token.Space	' '
Token.Literal.Number.Integer	'400'
Token.Space	'\n\n'
Token.Keyword.Declaration	'@property'
Token.Space	'\n'
Token.Name	'property5'
Token.Space	' '
Token.Punctuation	':'
Token.Space	' '
Token.Keyword.Type	'Bool'
Token.Space	'\n'
Token.Name	'property5'
Token.Space	' '
Token.Punctuation	'='
Token.Space	' '
Token.Keyword	'forall'
Token.Space	' '
Token.Name	'x'
Token.Space	' '
Token.Punctuation	'.'
Token.Space	' '
Token.Name	'validInput'
Token.Space	' '
Token.Name	'x'
Token.Space	' '
Token.Operator.Word	'and'
Token.Space	' '
Token.Name	'nearAndApproachingFromLeft'
Token.Space	' '
Token.Name	'x'
Token.Space	' '
Token.Operator	'=>'
Token.Space	' '
Token.Name	'advises'
Token.Space	' '
Token.Name	'strongRight'
Token.Space	' '
Token.Name	'x'
Token.Space	'\n\n'
Token.Comment	'--------------------------------------------------------------------------------\n'
Token.Comment	'-- Property 6\n'
Token.Space	'\n'
Token.Comment	'-- If the intruder is sufficiently far away, the network advises COC.\n'
Token.Space	'\n'
Token.Comment	'-- Tested on: N_{1,1}.\n'
Token.Space	'\n'
Token.Name	'intruderFarAway'
Token.Space	' '
Token.Punctuation	':'
Token.Space	' '
Token.Name	'UnnormalisedInputVector'
Token.Space	' '
Token.Operator	'->'
Token.Space	' '
Token.Keyword.Type	'Bool'
Token.Space	'\n'
Token.Name	'intruderFarAway'
Token.Space	' '
Token.Name	'x'
Token.Space	' '
Token.Punctuation	'='
Token.Space	'\n  '
Token.Literal.Number.Integer	'12000'
Token.Space	' '
Token.Operator	'<='
Token.Space	' '
Token.Name	'x'
Token.Space	' '
Token.Operator	'!'
Token.Space	' '
Token.Name	'distanceToIntruder'
Token.Space	' '
Token.Operator	'<='
Token.Space	' '
Token.Literal.Number.Integer	'62000'
Token.Space	'                                  '
Token.Operator.Word	'and'
Token.Space	'\n  '
Token.Punctuation	'('
Token.Operator	'-'
Token.Space	' '
Token.Name	'pi'
Token.Space	' '
Token.Operator	'<='
Token.Space	' '
Token.Name	'x'
Token.Space	' '
Token.Operator	'!'
Token.Space	' '
Token.Name	'angleToIntruder'
Token.Space	' '
Token.Operator	'<='
Token.Space	' '
Token.Operator	'-'
Token.Literal.Number.Integer	'0'
Token.Punctuation	'.'
Token.Literal.Number.Integer	'7'
Token.Space	' '
Token.Operator.Word	'or'
Token.Space	' '
Token.Literal.Number.Integer	'0'
Token.Punctuation	'.'
Token.Literal.Number.Integer	'7'
Token.Space	' '
Token.Operator	'<='
Token.Space	' '
Token.Name	'x'
Token.Space	' '
Token.Operator	'!'
Token.Space	' '
Token.Name	'angleToIntruder'
Token.Space	' '
Token.Operator	'<='
Token.Space	' '
Token.Name	'pi'
Token.Punctuation	')'
Token.Space	' '
Token.Operator.Word	'and'
Token.Space	'\n  '
Token.Operator	'-'
Token.Name	'pi'
Token.Space	'   '
Token.Operator	'<='
Token.Space	' '
Token.Name	'x'
Token.Space	' '
Token.Operator	'!'
Token.Space	' '
Token.Name	'intruderHeading'
Token.Space	'    '
Token.Operator	'<='
Token.Space	' '
Token.Operator	'-'
Token.Name	'pi'
Token.Space	' '
Token.Operator	'+'
Token.Space	' '
Token.Literal.Number.Integer	'0'
Token.Punctuation	'.'
Token.Literal.Number.Integer	'005'
Token.Space	'                            '
Token.Operator.Word	'and'
Token.Space	'\n  '
Token.Literal.Number.Integer	'100'
Token.Space	'   '
Token.Operator	'<='
Token.Space	' '
Token.Name	'x'
Token.Space	' '
Token.Operator	'!'
Token.Space	' '
Token.Name	'speed'
Token.Space	'              '
Token.Operator	'<='
Token.Space	' '
Token.Literal.Number.Integer	'1200'
Token.Space	'                                   '
Token.Operator.Word	'and'
Token.Space	'\n  '
Token.Literal.Number.Integer	'0'
Token.Space	'     '
Token.Operator	'<='
Token.Space	' '
Token.Name	'x'
Token.Space	' '
Token.Operator	'!'
Token.Space	' '
Token.Name	'intruderSpeed'
Token.Space	'      '
Token.Operator	'<='
Token.Space	' '
Token.Literal.Number.Integer	'1200'
Token.Space	'\n\n'
Token.Keyword.Declaration	'@property'
Token.Space	'\n'
Token.Name	'property6'
Token.Space	' '
Token.Punctuation	':'
Token.Space	' '
Token.Keyword.Type	'Bool'
Token.Space	'\n'
Token.Name	'property6'
Token.Space	' '
Token.Punctuation	'='
Token.Space	' '
Token.Keyword	'forall'
Token.Space	' '
Token.Name	'x'
Token.Space	' '
Token.Punctuation	'.'
Token.Space	' '
Token.Name	'validInput'
Token.Space	' '
Token.Name	'x'
Token.Space	' '
Token.Operator.Word	'and'
Token.Space	' '
Token.Name	'intruderFarAway'
Token.Space	' '
Token.Name	'x'
Token.Space	' '
Token.Operator	'=>'
Token.Space	' '
Token.Name	'advises'
Token.Space	' '
Token.Name	'clearOfConflict'
Token.Space	' '
Token.Name	'x'
Token.Space	'\n\n'
Token.Comment	'--------------------------------------------------------------------------------\n'
Token.Comment	'-- Property 7\n'
Token.Space	'\n'
Token.Comment	'-- If vertical separation is large, the network will never advise a strong turn.\n'
Token.Space	'\n'
Token.Comment	'-- Tested on: N_{1,9}.\n'
Token.Space	'\n'
Token.Name	'largeVerticalSeparation'
Token.Space	' '
Token.Punctuation	':'
Token.Space	' '
Token.Name	'UnnormalisedInputVector'
Token.Space	' '
Token.Operator	'->'
Token.Space	' '
Token.Keyword.Type	'Bool'
Token.Space	'\n'
Token.Name	'largeVerticalSeparation'
Token.Space	' '
Token.Name	'x'
Token.Space	' '
Token.Punctuation	'='
Token.Space	'\n  '
Token.Literal.Number.Integer	'0'
Token.Space	'    '
Token.Operator	'<='
Token.Space	' '
Token.Name	'x'
Token.Space	' '
Token.Operator	'!'
Token.Space	' '
Token.Name	'distanceToIntruder'
Token.Space	' '
Token.Operator	'<='
Token.Space	' '
Token.Literal.Number.Integer	'60760'
Token.Space	'  '
Token.Operator.Word	'and'
Token.Space	'\n  '
Token.Operator	'-'
Token.Name	'pi'
Token.Space	'  '
Token.Operator	'<='
Token.Space	' '
Token.Name	'x'
Token.Space	' '
Token.Operator	'!'
Token.Space	' '
Token.Name	'angleToIntruder'
Token.Space	'    '
Token.Operator	'<='
Token.Space	' '
Token.Name	'pi'
Token.Space	'     '
Token.Operator.Word	'and'
Token.Space	'\n  '
Token.Operator	'-'
Token.Name	'pi'
Token.Space	'  '
Token.Operator	'<='
Token.Space	' '
Token.Name	'x'
Token.Space	' '
Token.Operator	'!'
Token.Space	' '
Token.Name	'intruderHeading'
Token.Space	'    '
Token.Operator	'<='
Token.Space	' '
Token.Name	'pi'
Token.Space	'     '
Token.Operator.Word	'and'
Token.Space	'\n  '
Token.Literal.Number.Integer	'100'
Token.Space	'  '
Token.Operator	'<='
Token.Space	' '
Token.Name	'x'
Token.Space	' '
Token.Operator	'!'
Token.Space	' '
Token.Name	'speed'
Token.Space	'              '
Token.Operator	'<='
Token.Space	' '
Token.Literal.Number.Integer	'1200'
Token.Space	'   '
Token.Operator.Word	'and'
Token.Space	'\n  '
Token.Literal.Number.Integer	'0'
Token.Space	'    '
Token.Operator	'<='
Token.Space	' '
Token.Name	'x'
Token.Space	' '
Token.Operator	'!'
Token.Space	' '
Token.Name	'intruderSpeed'
Token.Space	'      '
Token.Operator	'<='
Token.Space	' '
Token.Literal.Number.Integer	'1200'
Token.Space	'\n\n'
Token.Keyword.Declaration	'@property'
Token.Space	'\n'
Token.Name	'property7'
Token.Space	' '
Token.Punctuation	':'
Token.Space	' '
Token.Keyword.Type	'Bool'
Token.Space	'\n'
Token.Name	'property7'
Token.Space	' '
Token.Punctuation	'='
Token.Space	' '
Token.Keyword	'forall'
Token.Space	' '
Token.Name	'x'
Token.Space	' '
Token.Punctuation	'.'
Token.Space	' '
Token.Name	'validInput'
Token.Space	' '
Token.Name	'x'
Token.Space	' '
Token.Operator.Word	'and'
Token.Space	' '
Token.Name	'largeVerticalSeparation'
Token.Space	' '
Token.Name	'x'
Token.Space	' '
Token.Operator	'=>'
Token.Space	'\n  '
Token.Operator.Word	'not'
Token.Space	' '
Token.Punctuation	'('
Token.Name	'advises'
Token.Space	' '
Token.Name	'strongLeft'
Token.Space	' '
Token.Name	'x'
Token.Punctuation	')'
Token.Space	' '
Token.Operator.Word	'and'
Token.Space	' '
Token.Operator.Word	'not'
Token.Space	' '
Token.Punctuation	'('
Token.Name	'advises'
Token.Space	' '
Token.Name	'strongRight'
Token.Space	' '
Token.Name	'x'
Token.Punctuation	')'
Token.Space	'\n\n'
Token.Comment	'--------------------------------------------------------------------------------\n'
Token.Comment	'-- Property 8\n'
Token.Space	'\n'
Token.Comment	'-- For a large vertical separation and a previous \u201cweak left\u201d advisory, the\n'
Token.Comment	'-- network will either output COC or continue advising \u201cweak left\u201d.\n'
Token.Space	'\n'
Token.Comment	'-- Tested on: N_{2,9}.\n'
Token.Space	'\n'
Token.Name	'largeVerticalSeparationAndPreviousWeakLeft'
Token.Space	' '
Token.Punctuation	':'
Token.Space	' '
Token.Name	'UnnormalisedInputVector'
Token.Space	' '
Token.Operator	'->'
Token.Space	' '
Token.Keyword.Type	'Bool'
Token.Space	'\n'
Token.Name	'largeVerticalSeparationAndPreviousWeakLeft'
Token.Space	' '
Token.Name	'x'
Token.Space	' '
Token.Punctuation	'='
Token.Space	'\n  '
Token.Literal.Number.Integer	'0'
Token.Space	'    '
Token.Operator	'<='
Token.Space	' '
Token.Name	'x'
Token.Space	' '
Token.Operator	'!'
Token.Space	' '
Token.Name	'distanceToIntruder'
Token.Space	' '
Token.Operator	'<='
Token.Space	' '
Token.Literal.Number.Integer	'60760'
Token.Space	'    '
Token.Operator.Word	'and'
Token.Space	'\n  '
Token.Operator	'-'
Token.Name	'pi'
Token.Space	'  '
Token.Operator	'<='
Token.Space	' '
Token.Name	'x'
Token.Space	' '
Token.Operator	'!'
Token.Space	' '
Token.Name	'angleToIntruder'
Token.Space	'    '
Token.Operator	'<='
Token.Space	' '
Token.Operator	'-'
Token.Literal.Number.Integer	'0'
Token.Punctuation	'.'
Token.Literal.Number.Integer	'75'
Token.Operator	'*'
Token.Name	'pi'
Token.Space	' '
Token.Operator.Word	'and'
Token.Space	'\n  '
Token.Operator	'-'
Token.Literal.Number.Integer	'0'
Token.Punctuation	'.'
Token.Literal.Number.Integer	'1'
Token.Space	' '
Token.Operator	'<='
Token.Space	' '
Token.Name	'x'
Token.Space	' '
Token.Operator	'!'
Token.Space	' '
Token.Name	'intruderHeading'
Token.Space	'    '
Token.Operator	'<='
Token.Space	' '
Token.Literal.Number.Integer	'0'
Token.Punctuation	'.'
Token.Literal.Number.Integer	'1'
Token.Space	'      '
Token.Operator.Word	'and'
Token.Space	'\n  '
Token.Literal.Number.Integer	'600'
Token.Space	'  '
Token.Operator	'<='
Token.Space	' '
Token.Name	'x'
Token.Space	' '
Token.Operator	'!'
Token.Space	' '
Token.Name	'speed'
Token.Space	'              '
Token.Operator	'<='
Token.Space	' '
Token.Literal.Number.Integer	'1200'
Token.Space	'     '
Token.Operator.Word	'and'
Token.Space	'\n  '
Token.Literal.Number.Integer	'600'
Token.Space	'  '
Token.Operator	'<='
Token.Space	' '
Token.Name	'x'
Token.Space	' '
Token.Operator	'!'
Token.Space	' '
Token.Name	'intruderSpeed'
Token.Space	'      '
Token.Operator	'<='
Token.Space	' '
Token.Literal.Number.Integer	'1200'
Token.Space	'\n\n'
Token.Keyword.Declaration	'@property'
Token.Space	'\n'
Token.Name	'property8'
Token.Space	' '
Token.Punctuation	':'
Token.Space	' '
Token.Keyword.Type	'Bool'
Token.Space	'\n'
Token.Name	'property8'
Token.Space	' '
Token.Punctuation	'='
Token.Space	' '
Token.Keyword	'forall'
Token.Space	' '
Token.Name	'x'
Token.Space	' '
Token.Punctuation	'.'
Token.Space	' '
Token.Name	'validInput'
Token.Space	' '
Token.Name	'x'
Token.Space	' '
Token.Operator.Word	'and'
Token.Space	' '
Token.Name	'largeVerticalSeparationAndPreviousWeakLeft'
Token.Space	' '
Token.Name	'x'
Token.Space	' '
Token.Operator	'=>'
Token.Space	'\n  '
Token.Punctuation	'('
Token.Name	'advises'
Token.Space	' '
Token.Name	'clearOfConflict'
Token.Space	' '
Token.Name	'x'
Token.Punctuation	')'
Token.Space	' '
Token.Operator.Word	'or'
Token.Space	' '
Token.Punctuation	'('
Token.Name	'advises'
Token.Space	' '
Token.Name	'weakLeft'
Token.Space	' '
Token.Name	'x'
Token.Punctuation	')'
Token.Space	'\n\n'
Token.Comment	'--------------------------------------------------------------------------------\n'
Token.Comment	'-- Property 9\n'
Token.Space	'\n'
Token.Comment	'-- Even if the previous advisory was \u201cweak right\u201d, the presence of a nearby\n'
Token.Comment	'-- intruder will cause the network to output a \u201cstrong left\u201d advisory instead.\n'
Token.Space	'\n'
Token.Comment	'-- Tested on: N_{3,3}.\n'
Token.Space	'\n'
Token.Name	'previousWeakRightAndNearbyIntruder'
Token.Space	' '
Token.Punctuation	':'
Token.Space	' '
Token.Name	'UnnormalisedInputVector'
Token.Space	' '
Token.Operator	'->'
Token.Space	' '
Token.Keyword.Type	'Bool'
Token.Space	'\n'
Token.Name	'previousWeakRightAndNearbyIntruder'
Token.Space	' '
Token.Name	'x'
Token.Space	' '
Token.Punctuation	'='
Token.Space	'\n  '
Token.Literal.Number.Integer	'2000'
Token.Space	' '
Token.Operator	'<='
Token.Space	' '
Token.Name	'x'
Token.Space	' '
Token.Operator	'!'
Token.Space	' '
Token.Name	'distanceToIntruder'
Token.Space	' '
Token.Operator	'<='
Token.Space	' '
Token.Literal.Number.Integer	'7000'
Token.Space	'       '
Token.Operator.Word	'and'
Token.Space	'\n  '
Token.Operator	'-'
Token.Literal.Number.Integer	'0'
Token.Punctuation	'.'
Token.Literal.Number.Integer	'4'
Token.Space	' '
Token.Operator	'<='
Token.Space	' '
Token.Name	'x'
Token.Space	' '
Token.Operator	'!'
Token.Space	' '
Token.Name	'angleToIntruder'
Token.Space	'    '
Token.Operator	'<='
Token.Space	' '
Token.Operator	'-'
Token.Literal.Number.Integer	'0'
Token.Punctuation	'.'
Token.Literal.Number.Integer	'14'
Token.Space	'      '
Token.Operator.Word	'and'
Token.Space	'\n  '
Token.Operator	'-'
Token.Name	'pi'
Token.Space	'  '
Token.Operator	'<='
Token.Space	' '
Token.Name	'x'
Token.Space	' '
Token.Operator	'!'
Token.Space	' '
Token.Name	'intruderHeading'
Token.Space	'    '
Token.Operator	'<='
Token.Space	' '
Token.Operator	'-'
Token.Name	'pi'
Token.Space	' '
Token.Operator	'+'
Token.Space	' '
Token.Literal.Number.Integer	'0'
Token.Punctuation	'.'
Token.Literal.Number.Integer	'01'
Token.Space	' '
Token.Operator.Word	'and'
Token.Space	'\n  '
Token.Literal.Number.Integer	'100'
Token.Space	'  '
Token.Operator	'<='
Token.Space	' '
Token.Name	'x'
Token.Space	' '
Token.Operator	'!'
Token.Space	' '
Token.Name	'speed'
Token.Space	'              '
Token.Operator	'<='
Token.Space	' '
Token.Literal.Number.Integer	'150'
Token.Space	'        '
Token.Operator.Word	'and'
Token.Space	'\n  '
Token.Literal.Number.Integer	'0'
Token.Space	'    '
Token.Operator	'<='
Token.Space	' '
Token.Name	'x'
Token.Space	' '
Token.Operator	'!'
Token.Space	' '
Token.Name	'intruderSpeed'
Token.Space	'      '
Token.Operator	'<='
Token.Space	' '
Token.Literal.Number.Integer	'150'
Token.Space	'\n\n'
Token.Keyword.Declaration	'@property'
Token.Space	'\n'
Token.Name	'property9'
Token.Space	' '
Token.Punctuation	':'
Token.Space	' '
Token.Keyword.Type	'Bool'
Token.Space	'\n'
Token.Name	'property9'
Token.Space	' '
Token.Punctuation	'='
Token.Space	' '
Token.Keyword	'forall'
Token.Space	' '
Token.Name	'x'
Token.Space	' '
Token.Punctuation	'.'
Token.Space	' '
Token.Name	'validInput'
Token.Space	' '
Token.Name	'x'
Token.Space	' '
Token.Operator.Word	'and'
Token.Space	' '
Token.Name	'previousWeakRightAndNearbyIntruder'
Token.Space	' '
Token.Name	'x'
Token.Space	' '
Token.Operator	'=>'
Token.Space	'\n  '
Token.Name	'advises'
Token.Space	' '
Token.Name	'strongLeft'
Token.Space	' '
Token.Name	'x'
Token.Space	'\n\n'
Token.Comment	'--------------------------------------------------------------------------------\n'
Token.Comment	'-- Property 10\n'
Token.Space	'\n'
Token.Comment	'-- For a far away intruder, the network advises COC.\n'
Token.Space	'\n'
Token.Comment	'-- Tested on: N_{4,5}.\n'
Token.Space	'\n'
Token.Name	'intruderFarAway2'
Token.Space	' '
Token.Punctuation	':'
Token.Space	' '
Token.Name	'UnnormalisedInputVector'
Token.Space	' '
Token.Operator	'->'
Token.Space	' '
Token.Keyword.Type	'Bool'
Token.Space	'\n'
Token.Name	'intruderFarAway2'
Token.Space	' '
Token.Name	'x'
Token.Space	' '
Token.Punctuation	'='
Token.Space	'\n  '
Token.Literal.Number.Integer	'36000'
Token.Space	' '
Token.Operator	'<='
Token.Space	' '
Token.Name	'x'
Token.Space	' '
Token.Operator	'!'
Token.Space	' '
Token.Name	'distanceToIntruder'
Token.Space	' '
Token.Operator	'<='
Token.Space	' '
Token.Literal.Number.Integer	'60760'
Token.Space	'       '
Token.Operator.Word	'and'
Token.Space	'\n  '
Token.Literal.Number.Integer	'0'
Token.Punctuation	'.'
Token.Literal.Number.Integer	'7'
Token.Space	'   '
Token.Operator	'<='
Token.Space	' '
Token.Name	'x'
Token.Space	' '
Token.Operator	'!'
Token.Space	' '
Token.Name	'angleToIntruder'
Token.Space	'    '
Token.Operator	'<='
Token.Space	' '
Token.Name	'pi'
Token.Space	'          '
Token.Operator.Word	'and'
Token.Space	'\n  '
Token.Operator	'-'
Token.Name	'pi'
Token.Space	'   '
Token.Operator	'<='
Token.Space	' '
Token.Name	'x'
Token.Space	' '
Token.Operator	'!'
Token.Space	' '
Token.Name	'intruderHeading'
Token.Space	'    '
Token.Operator	'<='
Token.Space	' '
Token.Operator	'-'
Token.Name	'pi'
Token.Space	' '
Token.Operator	'+'
Token.Space	' '
Token.Literal.Number.Integer	'0'
Token.Punctuation	'.'
Token.Literal.Number.Integer	'01'
Token.Space	'  '
Token.Operator.Word	'and'
Token.Space	'\n  '
Token.Literal.Number.Integer	'900'
Token.Space	'   '
Token.Operator	'<='
Token.Space	' '
Token.Name	'x'
Token.Space	' '
Token.Operator	'!'
Token.Space	' '
Token.Name	'speed'
Token.Space	'              '
Token.Operator	'<='
Token.Space	' '
Token.Literal.Number.Integer	'1200'
Token.Space	'        '
Token.Operator.Word	'and'
Token.Space	'\n  '
Token.Literal.Number.Integer	'600'
Token.Space	'   '
Token.Operator	'<='
Token.Space	' '
Token.Name	'x'
Token.Space	' '
Token.Operator	'!'
Token.Space	' '
Token.Name	'intruderSpeed'
Token.Space	'      '
Token.Operator	'<='
Token.Space	' '
Token.Literal.Number.Integer	'1200'
Token.Space	'\n\n'
Token.Keyword.Declaration	'@property'
Token.Space	'\n'
Token.Name	'property10'
Token.Space	' '
Token.Punctuation	':'
Token.Space	' '
Token.Keyword.Type	'Bool'
Token.Space	'\n'
Token.Name	'property10'
Token.Space	' '
Token.Punctuation	'='
Token.Space	' '
Token.Keyword	'forall'
Token.Space	' '
Token.Name	'x'
Token.Space	' '
Token.Punctuation	'.'
Token.Space	' '
Token.Name	'validInput'
Token.Space	' '
Token.Name	'x'
Token.Space	' '
Token.Operator.Word	'and'
Token.Space	' '
Token.Name	'intruderFarAway2'
Token.Space	' '
Token.Name	'x'
Token.Space	' '
Token.Operator	'=>'
Token.Space	' '
Token.Name	'advises'
Token.Space	' '
Token.Name	'clearOfConflict'
Token.Space	' '
Token.Name	'x'
Token.Space	'\n'

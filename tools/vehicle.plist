{  name = 'Vehicle';
   scopeName = 'source.vehicle';
   fileTypes = (.vcl);
   patterns = (
     {
       name = 'keyword.control.vehicle';
       match = '\b(if|then|else|let|in)\b';
     },
     {
       name = 'keyword.operator.vehicle';
       match = '\b([\.:-^*+=<>&%$!#%|/\\]+)\b';
     },
     {
       name = 'constant.numeric.natural.vehicle';
       match = '\b([0-9]+)\b';
       comment = 'Natural literal';
     },
     {
       name = 'constant.numeric.rat.vehicle';
       match = '\b([0-9]+\\.[0-9]+?(e-?[0-9]+)?)\b';
       comment = 'Rational literal';
     },
     {
       name = 'constant.boolean.vehicle';
       match = '\b(True|False)\b';
     },
     {
       name = 'constant.type.vehicle';
       match = '\b(Bool|Rat|Nat|Tensor|List|Nil|Cons)\b';
     },
     {
       name = 'variable.other.vehicle';
       match = '\b([a-z][a-zA-Z_0-9]*)\b';
     },
     {
       name = 'comment.block.vehicle';
       begin = '\\{-';
       end = '-\\}';
       comment = 'Block comment';
     },
     {
       name = 'comment.line.vehicle';
       match = '(--).*$\n?';
       comment = 'Line comment';
     }
   );
}

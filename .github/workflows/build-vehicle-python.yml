name: Build vehicle-python

# NOTE: This workflow assumes a recent version of Python and pipx are available
#       on the runner.

on:
  workflow_call:

defaults:
  run:
    shell: sh

env:
  # NOTE: cibuildwheel builds manylinux wheels in a container, and the versions
  #       of GHC and Cabal are hardcoded in the `before-all-$ID.sh` scripts.
  DEFAULT_GHC_VERSION: "9.4.4"
  DEFAULT_CABAL_VERSION: "3.10.1.0"

jobs:
  build-vehicle-python:
    strategy:
      matrix:
        os:
          - name: "Linux"
            type: "ubuntu-latest"
            arch: "x86_64"
            plat: "manylinux"
            test: "test,tensorflow"
          - name: "Linux"
            type: "ubuntu-latest"
            arch: "x86_64"
            plat: "musllinux"
            test: "test"
          - name: "macOS"
            type: "macos-latest"
            arch: "x86_64"
            plat: "macosx"
            test: "test,tensorflow"
          - name: "Windows"
            type: "windows-latest"
            arch: "AMD64"
            plat: "win"
            test: "test,tensorflow"

    name: vehicle-python / ${{ matrix.os.name }} - ${{ matrix.os.arch }}
    runs-on: ${{ matrix.os.type }}

    steps:
      - name: Get source
        uses: actions/checkout@v4

      - name: Setup GHC ${{ env.DEFAULT_GHC_VERSION }}
        if: matrix.os.name == 'macOS' || matrix.os.name == 'Windows'
        uses: haskell/actions/setup@v2
        with:
          ghc-version: ${{ env.DEFAULT_GHC_VERSION }}
          cabal-version: ${{ env.DEFAULT_CABAL_VERSION }}

      - name: Build wheel
        uses: pypa/cibuildwheel@v2.16.0
        with:
          package-dir: "./vehicle-python"
          output-dir: "./vehicle-python/wheelhouse"
          config-file: "{package}/pyproject.toml"
        env:
          CIBW_BUILD: "*${{ matrix.os.plat }}*"
          CIBW_ARCHS: "${{ matrix.os.arch }}"
          CIBW_TEST_EXTRAS: "${{ matrix.os.test }}"
          MACOSX_DEPLOYMENT_TARGET: "10.10"

      - name: Upload wheels
        uses: actions/upload-artifact@v3
        with:
          name: wheelhouse
          path: ./vehicle-python/wheelhouse/*.whl

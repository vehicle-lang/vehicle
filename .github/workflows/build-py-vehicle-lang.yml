name: Build py-vehicle-lang

# NOTE: This workflow assumes a recent version of Python and pipx are available
#       on the runner.

on:
  workflow_call:
  workflow_dispatch:

defaults:
  run:
    shell: sh

env:
  # NOTE: cibuildwheel builds manylinux wheels in a container, and the versions
  #       of GHC and Cabal are hardcoded in the `before-all-$ID.sh` scripts.
  DEFAULT_GHC_VERSION: "9.4.4"
  DEFAULT_CABAL_VERSION: "3.10.1.0"

  # NOTE: The default Python version is installed with actions/setup-python.
  DEFAULT_PYTHON_VERSION: "3.11"

jobs:
  build-py-vehicle-lang:
    strategy:
      matrix:
        os:
          - name: "Linux"
            type: "ubuntu-latest"
          - name: "macOS"
            type: "macos-latest"
          - name: "Windows"
            type: "windows-latest"

    name: py-vehicle-lang / ${{ matrix.os.name }}
    runs-on: ${{ matrix.os.type }}

    steps:
      - name: Get source
        uses: actions/checkout@v3

      - name: Setup GHC ${{ env.DEFAULT_GHC_VERSION }}
        if: runner.os == 'macOS' || runner.os == 'Windows'
        uses: haskell/actions/setup@v2
        with:
          ghc-version: ${{ env.DEFAULT_GHC_VERSION }}
          cabal-version: ${{ env.DEFAULT_CABAL_VERSION }}

      - # Required to run job via act: https://github.com/nektos/act
        name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: ${{ env.DEFAULT_PYTHON_VERSION }}

      - # Required to run job via act: https://github.com/nektos/act
        name: Setup pipx
        run: pip install pipx
        shell: sh

      - name: Build wheel
        uses: pypa/cibuildwheel@v2.12.3
        with:
          package-dir: "./py-vehicle-lang"
          output-dir: "./py-vehicle-lang/wheelhouse"
          config-file: "{package}/pyproject.toml"
        env:
          MACOSX_DEPLOYMENT_TARGET: "10.10"

      - name: Upload wheels
        uses: actions/upload-artifact@v3
        with:
          name: wheelhouse
          path: ./py-vehicle-lang/wheelhouse/*.whl

name: CI

on:
  push:
    branches:
      - dev
  pull_request:
    types:
      - opened
      - synchronize

jobs:
  build:
    strategy:
      matrix:
        os: [ubuntu-latest]
        ghc-version: ["8.10", "9.0"]
        cabal-version: ["3.4"]

    env:
      CABAL_PROJECT_FILE: cabal.project.ghc-${{ matrix.ghc-version }}
      CABAL_PROJECT_FREEZE_FILE: cabal.project.ghc-${{ matrix.ghc-version }}.freeze

    name: Build on ${{ matrix.os }} with GHC ${{ matrix.ghc-version }}
    runs-on: ${{ matrix.os }}

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - id: setup-haskell
        name: Setup Haskell
        uses: haskell/actions/setup@v1
        with:
          ghc-version: ${{ matrix.ghc-version }}
          cabal-version: ${{ matrix.cabal-version }}

      - id: haskell-cache
        name: Cache ~/.cabal/store and dist-newstyle
        uses: actions/cache@v2
        with:
          path: |
            ${{ steps.setup-haskell.outputs.cabal-store }}
            dist-newstyle
          key: ${{ matrix.os }}-${{ matrix.ghc-version }}-${{ hashFiles(env.CABAL_PROJECT_FREEZE_FILE) }}
          restore-keys: |
            ${{ matrix.os }}-${{ matrix.ghc-version }}-

      - name: Add Cabal installdir to path (Unix)
        if: runner.os == 'Linux' || runner.os == 'macOS'
        run: echo "${HOME}/.cabal/bin" >> $GITHUB_PATH
        shell: bash

      - name: Add Cabal installdir to path (Windows)
        if: runner.os == 'Windows'
        run: echo "$env:APPDATA\cabal\bin" | Out-File -FilePath $env:GITHUB_PATH -Encoding utf8 -Append
        shell: powershell

      - name: Build shakefile
        run: cabal v2-build exe:vehicle-build-system

      - name: Setup dependencies
        run: cabal v2-run vehicle-build-system init

      - name: Run tests
        run: cabal v2-run vehicle-build-system basic-tests

      - name: Copy Vehicle
        run: |
          mkdir -p ${{ github.workspace }}/dist/bin
          cabal install exe:vehicle \
            --overwrite-policy=always \
            --install-method=copy \
            --installdir=${{ github.workspace }}/dist/bin
        shell: bash

      - name: Upload Vehicle
        uses: actions/upload-artifact@v2
        with:
          name: vehicle-${{ runner.arch }}-${{ runner.os }}
          path: ${{ github.workspace }}/dist/bin/*

name: Build vehicle

on:
  workflow_call:

defaults:
  run:
    shell: sh

jobs:
  build-vehicle:
    strategy:
      matrix:
        os:
          - name: "Linux"
            type: ubuntu-latest
            arch: "x86_64"
          - name: "macOS"
            type: "macos-12"
            arch: "x86_64"
          - name: "macOS"
            type: "macos-14"
            arch: "arm64"
          - name: "Windows"
            type: "windows-latest"
            arch: "amd64"
        haskell:
          - ghc:
              version: "9.4.8"
            cabal:
              version: "3.10.2.1"
              project-file: "cabal.project.ghc-9.4.8"
              extra-args: ""
              extra-args-test-golden: ""
        include:
          # Build with GHC 9.8.1
          - os:
              name: Linux
              type: ubuntu-latest
              arch: "x86_64"
            haskell:
              ghc:
                version: "9.8.1"
              cabal:
                version: "3.10.2.1"
                project-file: "cabal.project.ghc-9.8.1"
                extra-args: ""
                # TODO: Migrate testVerifier to a Haskell executable for portability.
                extra-args-test-golden: "--test-option='--allowlist-externals=TestVerifier'"
          # Build with GHC 9.6.4
          - os:
              name: Linux
              type: ubuntu-latest
              arch: "x86_64"
            haskell:
              ghc:
                version: "9.6.4"
              cabal:
                version: "3.10.2.1"
                project-file: "cabal.project.ghc-9.6.4"
                extra-args: ""
                extra-args-test-golden: ""
          # Build with GHC 9.2.8
          - os:
              name: Linux
              type: ubuntu-latest
              arch: "x86_64"
            haskell:
              ghc:
                version: "9.2.8"
              cabal:
                version: "3.8.1.0"
                project-file: "cabal.project.ghc-9.2.8"
                extra-args: ""
                extra-args-test-golden: ""
          # Build with GHC 9.0.2
          - os:
              name: Linux
              type: ubuntu-latest
              arch: "x86_64"
            haskell:
              ghc:
                version: "9.0.2"
              cabal:
                version: "3.8.1.0"
                project-file: "cabal.project.ghc-9.0.2"
                extra-args: ""
                extra-args-test-golden: ""
          # Build with GHC 8.10.7
          - os:
              name: Linux
              type: ubuntu-latest
              arch: "x86_64"
            haskell:
              ghc:
                version: "8.10.7"
              cabal:
                version: "3.8.1.0"
                project-file: "cabal.project.ghc-8.10.7"
                extra-args: ""
                extra-args-test-golden: ""
          # Build with -fnothunks:
          - os:
              name: Linux
              type: ubuntu-latest
              arch: "x86_64"
            haskell:
              ghc:
                version: "9.4.8"
              cabal:
                version: "3.10.2.1"
                project-file: "cabal.project.nothunks.ghc-9.4.8"
                extra-args: "-fnothunks"
                extra-args-test-golden: ""
          # 20-12-2022:
          # This test is disabled because -fghc-debug requires two threads, which triggers #342.
          # Build with -fghc-debug:
          # - os:
          #     name: Linux
          #     type: ubuntu-latest
          #     arch: "x86_64"
          #   haskell:
          #     ghc:
          #       version: "9.4.8"
          #     cabal:
          #       version: "3.10.2.1"
          #       project-file: "cabal.project.ghc-debug.ghc-9.4.8"
          #       extra-args: "-fghc-debug"
          # 20-12-2022:
          # This test is disabled because -fghc-debug requires two threads, which triggers #342.
          # Build with -fghc-debug and -fnothunks:
          # - os:
          #     name: Linux
          #     type: ubuntu-latest
          #     arch: "x86_64"
          #   haskell:
          #     ghc:
          #       version: "9.4.8"
          #     cabal:
          #       version: "3.10.2.1"
          #       project-file: "cabal.project.ghc-debug.nothunks.ghc-9.4.8"
          #       extra-args: "-fghc-debug -fnothunks"

    name: vehicle / ${{ matrix.os.name }} - ${{ matrix.os.arch }} - GHC ${{ matrix.haskell.ghc.version }} ${{ matrix.haskell.cabal.extra-args }}
    runs-on: ${{ matrix.os.type }}

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Haskell
        uses: ./.github/actions/setup-haskell
        with:
          ghc-version: ${{ matrix.haskell.ghc.version }}
          cabal-version: ${{ matrix.haskell.cabal.version }}
          cabal-project-file: ${{ matrix.haskell.cabal.project-file }}
          cabal-project-freeze-file: ${{ matrix.haskell.cabal.project-file }}.freeze

      - name: Run Vehicle unit tests
        run: |
          cabal test                                                \
            vehicle:test:unit-tests                                 \
            --test-show-details=always                              \
            --test-option=--color=always                            \
            --test-option=--num-threads=1                           \
            --project-file=${{ matrix.haskell.cabal.project-file }} \
            ${{ matrix.haskell.cabal.extra-args }}
        shell: sh

      - name: Run Vehicle golden tests
        run: |
          cabal test                                                \
            vehicle:test:golden-tests                               \
            --test-show-details=always                              \
            --test-option=--color=always                            \
            --test-option=--num-threads=1                           \
            ${{ matrix.haskell.cabal.extra-args-test-golden }}      \
            --project-file=${{ matrix.haskell.cabal.project-file }} \
            ${{ matrix.haskell.cabal.extra-args }}                  \
        shell: sh

      - name: Build Vehicle
        run: |
          mkdir -p bin
          cabal install                                             \
            vehicle:exe:vehicle                                     \
            --overwrite-policy=always                               \
            --install-method=copy                                   \
            --installdir=bin                                        \
            --project-file=${{ matrix.haskell.cabal.project-file }} \
            ${{ matrix.haskell.cabal.extra-args }}

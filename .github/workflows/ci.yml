name: build

on:
  push:
    branches:
      - dev
  pull_request:
    types:
      - opened
      - synchronize

env:
  DEFAULT_GHC_VERSION: "9.0"

jobs:
  vehicle:
    strategy:
      matrix:
        os_and_name:
          - [ubuntu-latest, Linux]
          - [macos-latest, macOS]
          - [windows-latest, Windows]
        ghc-version: ["8.10", "9.0"]
        cabal-version: ["3.8"]
        experimental: [false]
    env:
      CABAL_PROJECT_FILE: cabal.project.ghc-${{ matrix.ghc-version }}
      CABAL_PROJECT_FREEZE_FILE: cabal.project.ghc-${{ matrix.ghc-version }}.freeze

    name: ${{ matrix.os_and_name[1] }} / GHC ${{ matrix.ghc-version }}
    runs-on: ${{ matrix.os_and_name[0] }}
    continue-on-error: ${{ matrix.experimental }}

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Setup Haskell
        uses: ./.github/actions/setup-haskell
        with:
          ghc-version: ${{ matrix.ghc-version }}
          cabal-version: ${{ matrix.cabal-version }}
          cabal-project-file: ${{ env.CABAL_PROJECT_FILE }}
          cabal-project-freeze-file: ${{ env.CABAL_PROJECT_FREEZE_FILE }}

      - name: Build Vehicle
        run: |
          cabal v2-build exe:vehicle         \
            --project-file=${{ env.CABAL_PROJECT_FILE }}
        shell: sh

      - name: Test Vehicle
        run: |
          cabal v2-test vehicle-unit-tests   \
            --test-option=--color=always     \
            --test-show-details=always       \
            --project-file=${{ env.CABAL_PROJECT_FILE }}
          cabal v2-test vehicle-golden-tests \
            --test-option=--color=always     \
            --test-show-details=always       \
            --project-file=${{ env.CABAL_PROJECT_FILE }}
        shell: sh

      - name: Copy Vehicle executable to bdist
        run: |
          mkdir bdist
          cabal v2-install exe:vehicle       \
            --overwrite-policy=always        \
            --install-method=copy            \
            --installdir=~/.vehicle/bin      \
            --project-file=${{ env.CABAL_PROJECT_FILE }}
        shell: sh

      - uses: ./.github/actions/upload-vehicle
        with:
          path: ~/.vehicle/bin
          ghc-version: ${{ matrix.ghc-version }}

  vehicle-python:
    needs: [vehicle]
    name: ${{ matrix.os }} / Python ${{ matrix.python-version }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        python-version: ["3.7", "3.8", "3.9", "3.10"]
        include:
          - # Earliest supported version:
            os: ubuntu-latest
            python-version: "3.7.1"

    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v3
        with:
          submodules: true

      - name: Setup Vehicle
        uses: ./.github/actions/setup-vehicle

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
          cache: "pip"
          cache-dependency-path: "vehicle-python/requirements-ci.txt"

      - name: Setup requirements
        run: |
          python -m pip install --upgrade pip
          python -m pip install -r requirements-ci.txt
        shell: sh
        working-directory: vehicle-python

      - name: Test
        run: |
          tox --skip-missing-interpreters
        shell: sh
        working-directory: vehicle-python

  # editor-integration:
  #   strategy:
  #     matrix:
  #       os_and_name:
  #         - [ubuntu-latest, Linux]
  #         - [macos-latest, macOS]
  #         - [windows-latest, Windows]
  #       ghc-version: ["8.10", "9.0"]
  #       cabal-version: ["3.8"]
  #       experimental: [false]
  #   env:
  #     CABAL_PROJECT_FILE: cabal.project.ghc-${{ matrix.ghc-version }}
  #     CABAL_PROJECT_FREEZE_FILE: cabal.project.ghc-${{ matrix.ghc-version }}.freeze
  #
  #   name: ${{ matrix.os_and_name[1] }} / GHC ${{ matrix.ghc-version }}
  #   runs-on: ${{ matrix.os_and_name[0] }}
  #   continue-on-error: ${{ matrix.experimental }}
  #
  #   steps:
  #     - name: Checkout
  #       uses: actions/checkout@v3
  #
  #     - name: Setup Haskell
  #       uses: ./.github/actions/setup-haskell
  #       with:
  #         ghc-version: ${{ matrix.ghc-version }}
  #         cabal-version: ${{ matrix.cabal-version }}
  #         cabal-project-file: ${{ env.CABAL_PROJECT_FILE }}
  #         cabal-project-freeze-file: ${{ env.CABAL_PROJECT_FREEZE_FILE }}
  #
  #     - name: Test Editor Integration
  #       run: |
  #         cabal v2-install hie-bios          \
  #           --ignore-project                 \
  #           --overwrite-policy=always
  #         ./scripts/hie-bios-check           \
  #           $(git ls-files -- '*.hs')
  #       shell: sh

name: "Setup Marabou3"
description: "Setup Marabou3"
inputs:
  marabou-commit:
    required: false
    description: 'The Version of Marabou to use. If set to "HEAD", it will always get the latest version.'
    default: "HEAD"

runs:
  using: "composite"
  steps:
    - name: windows-check
      if: runner.os == 'Windows'
      run: |
        echo "Cannot install Marabou on Windows"
        exit 1
      shell: sh

    - name: Cache Marabou
      id: cache-Marabou
      uses: actions/cache@v3
      with:
        path: ~/.Marabou/bin/Marabou
        key: ${{ runner.os }}-Marabou-${{ inputs.marabou-commit }}

    - name: Install cmake
      if: steps.cache-Marabou.outputs.cache-hit != 'true'
      uses: jwlawson/actions-setup-cmake@v1.13
      with:
        cmake-version: '3.16.x'

    - name: Setup GNU Fortran
      uses: modflowpy/install-gfortran-action@v1

    # This is a workaround for issue: https://github.com/NeuralNetworkVerification/Marabou/issues/590
    - name: Install boost
      id: install-boost
      if: steps.cache-Marabou.outputs.cache-hit != 'true'
      uses: MarkusJx/install-boost@v2.4.1
      with:
          # A list of supported versions can be found here:
          # https://github.com/MarkusJx/prebuilt-boost/blob/main/versions-manifest.json
          boost_version: 1.71.0

    - name: Checkout Marabou repo
      if: steps.cache-Marabou.outputs.cache-hit != 'true'
      uses: actions/checkout@v3
      with:
        repository: NeuralNetworkVerification/Marabou
        path: Marabou
        fetch-depth: 1
        ref: ${{ inputs.marabou-commit }}

    - name: Build Marabou
      if: steps.cache-Marabou.outputs.cache-hit != 'true'
      run: |
        mkdir build
        cd build
        cmake ..\
          -DBoost_INCLUDE_DIR=${{steps.install-boost.outputs.BOOST_ROOT}}/include\
          -DBoost_LIBRARY_DIRS=${{steps.install-boost.outputs.BOOST_ROOT}}/lib
        cmake --build .
      working-directory: Marabou
      shell: sh
      env:
          BOOST_ROOT: ${{ steps.install-boost.outputs.BOOST_ROOT }}

    - name: Install Marabou
      if: steps.cache-Marabou.outputs.cache-hit != 'true'
      run: |
        mkdir -p ~/.Marabou/bin
        cp build/bin/Marabou ~/.Marabou/bin/Marabou
      working-directory: Marabou
      shell: sh

    - name: Add Marabou to PATH
      run: |
        echo "~/.Marabou/bin" >> $GITHUB_PATH
      shell: sh
